{"version":3,"sources":["icons/btc.svg","icons/eth.svg","icons/metamask.svg","icons/ledger.svg","icons/ledger_purple.svg","components/WalletDisplay/wallet-icon.svg","components/SwapPairPanel/assets-bg.svg","components/AddressInput/tick.svg","components/AddressInput/error.svg","icons/lock.svg","icons/switch.svg","logo.png","logo-text.png","icons/completed.svg","config/index.js","config/default.js","config/config.js","services/chainClient.js","components/SwapProgressStepper/steps.js","utils/async.js","actions/transactions.js","actions/secretparams.js","utils/currencies.js","utils/expiration.js","utils/app-links.js","actions/swap.js","actions/wallets.js","components/Button/Button.js","utils/wallets.js","components/WalletDisplay/WalletDisplay.js","components/WalletChoose/WalletChoose.js","components/WalletConnecting/WalletConnecting.js","components/WalletConnected/WalletConnected.js","utils/address.js","components/WalletConnectPopup/Wallets.js","components/WalletConnectPopup/WalletConnectPopup.js","containers/WalletPanel/WalletPanel.js","containers/WalletPanel/index.js","components/SwapPairPanel/SwapPairPanel.js","actions/assets.js","components/CurrencyInput/CurrencyInput.js","components/Rate/Rate.js","containers/CurrencyInputs/CurrencyInputs.js","containers/CurrencyInputs/index.js","actions/counterparty.js","components/AddressInput/AddressInput.js","containers/CounterPartyWallets/CounterPartyWallets.js","containers/CounterPartyWallets/index.js","containers/InitiatorExpirationInfo/InitiatorExpirationInfo.js","containers/InitiatorExpirationInfo/index.js","components/withCopyButton.js","components/ExpirationDetails/ExpirationDetails.js","components/ExpirationDetails/index.js","containers/SwapInitiation/SwapInitiation.js","containers/SwapInitiation/index.js","components/BrandCard/BrandCard.js","components/CounterPartyLinkCard/CounterPartyLinkCard.js","components/BackupLinkCard/BackupLinkCard.js","containers/Waiting/Waiting.js","containers/Waiting/index.js","containers/SwapRedemption/SwapRedemption.js","containers/SwapRedemption/index.js","containers/SwapCompleted/SwapCompleted.js","containers/SwapCompleted/index.js","containers/SwapRefund/SwapRefund.js","containers/SwapRefund/index.js","components/SwapProgressStepper/SwapProgressStepper.js","containers/LiqualitySwap/LiqualitySwap.js","containers/LiqualitySwap/index.js","reducers/helpers.js","reducers/assets.js","reducers/wallets.js","reducers/counterparty.js","reducers/transactions.js","reducers/secretparams.js","reducers/swap.js","reducers/index.js","App.js","index.js","MetaMask.js","registerServiceWorker.js","icons/copy.svg","icons/clock.svg","icons/handshake.png"],"names":["module","exports","__webpack_require__","p","finalConfig","_","clone","basePath","injectScript","debug","merge","eth","rpc","url","network","btc","username","password","feeNumberOfBlocks","console","log","ethClient","Client","addProvider","providers","ethereum","EthereumRPCProvider","localStorage","ethRpc","window","process","REACT_APP_ETH_RPC","config","web3","EthereumMetaMaskProvider","currentProvider","EthereumSwapProvider","btcClient","bitcoin","BitcoreRPCProvider","btcRpc","REACT_APP_BTC_RPC","btcRpcUser","REACT_APP_BTC_RPC_USER","btcRpcPass","REACT_APP_BTC_RPC_PASS","BitcoinLedgerProvider","networks","BitcoinSwapProvider","clients","getClient","code","steps","Object","freeze","INITIATION","AGREEMENT","CLAIMING","SETTLED","stepData","id","label","sleep","ms","Promise","resolve","setTimeout","types","SET_TRANSACTION","setStep","transactions","dispatch","step","a","fund","hash","b","confirmations","claim","swapActions","monitorTransaction","_callee2","swap","party","kind","tx","client","updatedTransaction","regenerator_default","wrap","_context2","prev","next","assets","currency","getTransactionByHash","sent","type","stop","this","actions","setTransaction","_ref","asyncToGenerator","mark","_callee","getState","_context","_x6","_x7","apply","arguments","SET_SECRET","SET_SECRET_HASH","setSecret","secret","setSecretHash","secretHash","currencies","icon","btcIcon","isValidAddress","address","test","unitToCurrency","value","BigNumber","dividedBy","toNumber","currencyToUnit","times","ethIcon","expirationDurations","moment","duration","getFundExpiration","expiration","start","time","subtract","getClaimExpiration","generateExpiration","add","SUB_PATH","appSubPath","REACT_APP_BASE_PATH","APP_BASE_URL","concat","location","protocol","host","generateLink","assetA","assetB","assetRate","walletA","walletB","transactionsA","transactionsB","counterparty","length","undefined","_swap$assets","rate","_swap$wallets","wallets","_swap$transactions","_swap$assets2","_swap$wallets2","_swap$transactions2","urlParams","ccy1","ccy1v","ccy1Addr","counterParty","addresses","ccy1CounterPartyAddr","ccy2","ccy2v","ccy2Addr","ccy2CounterPartyAddr","ccy3v","aFundHash","bFundHash","aFundBlock","block","bFundBlock","secretParams","unix","isPartyB","queryString","stringify","generateSwapState","_counterParty","parse","replace","parseFloat","defineProperty","link","href","SWITCH_SIDES","SET_STEP","SET_EXPIRATION","SET_LINK","SET_IS_VERIFIED","setExpiration","setLink","setIsVerified","isVerified","alphaWarning","alert","lockFunds","_callee7","_getState$swap3","secretMsg","swapExpiration","valueInUnit","initiateSwapParams","txHash","_context7","generateSecret","crypto","sha256","secretActions","getBlockHeight","initiateSwap","transactionActions","waitForExpiration","_callee8","_getState$swap4","_getState$swap4$asset","_context8","verifyInitiateSwapTransaction","abrupt","findInitiateSwapTransaction","_callee9","_getState$swap5","_getState$swap5$asset","initiateTransaction","_context9","waitForSwapClaim","_ref4","_callee4","_getState$swap","claimTransaction","_context4","findClaimSwapTransaction","push","_x13","_x14","unlockFunds","_callee10","_getState$swap6","claimSwapParams","_context10","claimSwap","_callee11","_getState$swap7","_context11","isAfter","switchSides","_x3","_x4","confirmSwap","_ref2","_x5","waitForSwapConfirmation","_ref3","_callee3","_context3","_x11","_x12","redeemSwap","_ref5","_callee5","_context5","_x17","_x18","refundSwap","_ref6","_callee6","_getState$swap2","_context6","_x19","_x20","TOGGLE_WALLET_CONNECT","CHOOSE_WALLET","CONNECT_WALLET","DISCONNECT_WALLET","chooseWallet","wallet","connectWallet","balance","waitForWallet","addressesPerCall","unusedAddress","unusedAddressReached","usedAddresses","addressesIndex","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","allAddresses","expectedAddress","formattedBalance","enable","getUnusedAddress","getAddresses","map","addr","Symbol","iterator","done","t0","return","finish","includes","toConsumableArray","filter","getBalance","toFixed","_x","_x2","toggleWalletConnect","target","disconnectWallet","Button","_this","classes","props","className","primary","secondary","wide","small","react_default","createElement","join","disabled","onClick","e","class","src","children","Component","metamask","name","ledger","ledger_purple","ledgerPurple","WalletBalance","WalletIcon","connected","components_Button_Button","onButtonClick","WalletChoose","title","subTitle","toUpperCase","WalletConnecting","cancelWallet","cancelText","WalletConnected","substring","disconnectText","multiAddress","connectTitle","connectSubtitle","WalletConnectPopup","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","_this$props","walletConnectBody","walletConnected","components_WalletConnected_WalletConnected","walletChosen","components_WalletConnecting_WalletConnecting","subtitle","components_WalletChoose_WalletChoose","Modal_default","open","onClose","handleClose","WalletPanel","_this$props$assets","_this$props$wallets","WalletDisplay_WalletDisplay","onToggleWalletConnect","currentTarget","components_WalletConnectPopup_WalletConnectPopup","connectOpen","chosen","onWalletDisconnected","anchorEl","containers_WalletPanel","connect","state","onWalletConnected","SwapPairPanel","haveCurrency","wantCurrency","AssetsBG","onIconClick","haveLabel","wantLabel","defaultProps","CHANGE_AMOUNT","changeAmount","newValue","filledInputs","asset","unfilledInputs","allFilled","twoFilled","onlyAUnfilled","onlyBUnfilled","onlyRateUnfilled","newA","toString","newB","newRate","CurrencyInput","readOnly","placeholder","onChange","Rate","currencyB","currencyA","CurrencyInputs","components_CurrencyInput_CurrencyInput","onAmountChange","components_Rate_Rate","newValueA","ownProps","onSwitchSides","assetActions","CHANGE_COUNTER_PARTY_ADDRESS","changeCounterPartyAddress","valid","AddressInput","helperMessage","TickIcon","ErrorIcon","CounterPartyWallets","components_AddressInput_AddressInput","onCounterPartyAddressChange","InitiatorExpirationInfo","_this2","interval","setInterval","setState","clearInterval","LockIcon","asHours","ClockIcon","format","withCopyButton","WrappedComponent","_React$Component","_class","inherits","createClass","key","tempInput","document","style","body","appendChild","select","execCommand","removeChild","assign","onCopyClick","handleCopyClick","React","ExpirationDetails","getExpirationState","displayOrder","find","now","transaction","getTransaction","tick","maxNow","left","diff","passed","total","filled","asSeconds","utc","asMilliseconds","CopyIcon","width","objectSpread","SwapInitiation","initialSwapState","getErrors","errors","walletsConnected","walletsValid","counterPartyAddressesValid","initiationConfirmed","components_SwapPairPanel_SwapPairPanel","SwapIcon","containers_CurrencyInputs","HandshakeIcon","containers_CounterPartyWallets","components_ExpirationDetails","containers_InitiatorExpirationInfo","nextEnabled","error","BrandCard","components_BrandCard_BrandCard","CompletedIcon","onNextClick","Waiting","LiqualityLogo","isClaim","SwapRedemption","SwapCompleted","SwapRefund","SwapProgressStepper","activeStep","findIndex","connector","index_es","active","completed","line","root","alternativeLabel","index","stepIconProps","text","StepIconProps","LiqualitySwap","getCounterPartyLinkCard","getBackupLinkCard","components_BackupLinkCard_BackupLinkCard","history","_this3","components_CounterPartyLinkCard_CounterPartyLinkCard","components_SwapProgressStepper_SwapProgressStepper","Route","exact","path","component","render","withRouter","getReducerFunction","reducerMap","initialState","fallbackFunction","action","reducer","_reducers","swapTypes","update","$set","assetTypes","wallets_reducers","walletTypes","secretparams_reducers","combineReducers","createBrowserHistory","basename","pathname","hotjar","initialize","initialAppState","store","createStore","connectRouter","reducers","applyMiddleware","thunk","routerMiddleware","s","App","es","lib","containers_LiqualitySwap","marginTop","textAlign","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","innerHTML","getElementsByTagName","ReactDOM","MetaMask","getElementById","src_App_0","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0PCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mrBCKlCC,EAAcC,IAAEC,MCLP,CACbC,SAAU,IACVC,aAAc,GACdC,OAAO,IDITJ,IAAEK,MAAMN,EEPO,CACbO,IAAK,CACHC,IAAK,CACHC,IAAK,kDAEPC,QAAS,GAEXC,IAAK,CACHH,IAAK,CACHI,SAAU,YACVC,SAAU,eACVJ,IAAK,gCAEPK,kBAAmB,EACnBJ,QAAS,WAEXL,OAAO,EACPF,SAAU,mBACVC,aAAY,o6CFTdW,QAAQC,IAAIhB,GAEGA,gBGNTiB,EAAY,IAAIC,SACtBD,EAAUE,YAAY,IAAIC,YAAUC,SAASC,oBAC3CC,aAAaC,QAAUC,OAAOD,QAAUE,+CAAYC,mBAAqBC,EAAOrB,IAAIC,IAAIC,MAEtE,qBAAToB,MACTZ,EAAUE,YAAY,IAAIC,YAAUC,SAASS,yBAAyBD,KAAKE,gBAAiBH,EAAOrB,IAAIG,UAEzGO,EAAUE,YAAY,IAAIC,YAAUC,SAASW,sBAE7C,IAAMC,EAAY,IAAIf,SACtBe,EAAUd,YAAY,IAAIC,YAAUc,QAAQC,mBAC1CZ,aAAaa,QAAUX,OAAOW,QAAUV,+CAAYW,mBAAqBT,EAAOjB,IAAIH,IAAIC,IACxFc,aAAae,YAAcb,OAAOa,YAAcZ,+CAAYa,wBAA0BX,EAAOjB,IAAIH,IAAII,SACrGW,aAAaiB,YAAcf,OAAOe,YAAcd,+CAAYe,wBAA0Bb,EAAOjB,IAAIH,IAAIK,SACrGe,EAAOd,oBAETmB,EAAUd,YAAY,IAAIC,YAAUc,QAAQQ,sBAAsB,CAAChC,QAASiC,WAASf,EAAOjB,IAAID,YAChGuB,EAAUd,YAAY,IAAIC,YAAUc,QAAQU,oBAAoB,CAAClC,QAASiC,WAASf,EAAOjB,IAAID,YAE9F,IAAMmC,EAAU,CACdtC,IAAKU,EACLN,IAAKsB,GAGP,SAASa,EAAWC,GAClB,OAAOF,EAAQE,GC9BjB,IAAMC,EAAQC,OAAOC,OAAO,CAC1BC,WAAY,aACZC,UAAW,YACXC,SAAU,WACVC,QAAS,YAGLC,EAAW,CACf,CAAEC,GAAIR,EAAMG,WAAYM,MAAO,mBAC/B,CAAED,GAAIR,EAAMI,UAAWK,MAAO,wBAC9B,CAAED,GAAIR,EAAMK,SAAUI,MAAO,YAC7B,CAAED,GAAIR,EAAMM,QAASG,MAAO,eCXxBC,EAAQ,SAAAC,GAAE,OAAI,IAAIC,QAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,MCKzDI,EAAQ,CACZC,gBAAiB,mBAGnB,SAASC,EAASC,EAAcC,GAC9B,IAAIC,EAAOpB,EAAMG,WACbe,EAAaG,EAAEC,KAAKC,OACtBH,EAAOpB,EAAMI,UACTc,EAAaM,EAAEF,KAAKC,MAClBL,EAAaG,EAAEC,KAAKG,cAAgB,GAAKP,EAAaM,EAAEF,KAAKG,cAAgB,IAC/EL,EAAOpB,EAAMK,SACTa,EAAaG,EAAEK,MAAMH,OACvBH,EAAOpB,EAAMM,WAKrBa,EAASQ,GAAYV,QAAQG,aAGhBQ,uFAAf,SAAAC,EAAmCC,EAAMC,EAAOC,EAAMC,EAAId,GAA1D,IAAAe,EAAAC,EAAA,OAAAC,EAAAf,EAAAgB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEQN,OAFR,EAGiB,UAATF,EACFE,EAASpC,EAAUgC,EAAKW,OAAiB,MAAVV,EAAgB,IAAM,KAAKW,UACxC,SAATV,IACTE,EAASpC,EAAUgC,EAAKW,OAAOV,GAAOW,WAN5CJ,EAAAE,KAAA,EAQqCN,EAAOS,qBAAqBV,EAAGV,MARpE,cAQUY,EARVG,EAAAM,KASIzB,EAAS,CAAE0B,KAAM9B,EAAMC,gBAAiBe,QAAOC,OAAMC,GAAIE,IAT7DG,EAAAE,KAAA,EAUU9B,EAAM,KAVhB,OAAA4B,EAAAE,KAAA,iCAAAF,EAAAQ,SAAAjB,EAAAkB,gCAuBA,IAAMC,EAAU,CACdC,eAVF,SAAyBlB,EAAOC,EAAMC,GACpC,OAAAiB,EAAAjD,OAAAkD,EAAA,EAAAlD,CAAAmC,EAAAf,EAAA+B,KAAO,SAAAC,EAAOlC,EAAUmC,GAAjB,IAAAxB,EAAA,OAAAM,EAAAf,EAAAgB,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cACLrB,EAAS,CAAE0B,KAAM9B,EAAMC,gBAAiBe,QAAOC,OAAMC,OAErDhB,GADMa,EAAOwB,IAAWxB,MACXZ,aAAcC,GAHtBoC,EAAAf,KAAA,EAICZ,EAAmBE,EAAMC,EAAOC,EAAMC,EAAId,GAJ3C,wBAAAoC,EAAAT,SAAAO,EAAAN,SAAP,SAAAS,EAAAC,GAAA,OAAAP,EAAAQ,MAAAX,KAAAY,YAAA,IAAAT,ICxCInC,EAAQ,CACZ6C,WAAY,aACZC,gBAAiB,mBAWnB,IAAMb,EAAU,CACdc,UATF,SAAoBC,GAClB,MAAO,CAAElB,KAAM9B,EAAM6C,WAAYG,WASjCC,cANF,SAAwBC,GACtB,MAAO,CAAEpB,KAAM9B,EAAM8C,gBAAiBI,qECuBzBC,EA1BI,CACjBvG,IAAO,CACLwG,KAAMC,IACNrE,KAAM,MAENsE,eAAgB,SAAAC,GAAO,MAAI,sCAAsCC,KAAKD,IACtEE,eALK,SAKWC,GACd,OAAOC,IAAUD,GAAOE,UAVX,KAUiCC,YAEhDC,eARK,SAQWJ,GACd,OAAOC,IAAUD,GAAOK,MAbX,KAa6BF,aAG9CrH,IAAO,CACL4G,KAAMY,IACNhF,KAAM,MACNsE,eAAgB,SAAAC,GAAO,MAAI,oBAAoBC,KAAKD,IACpDE,eAJK,SAIWC,GACd,OAAOC,IAAUD,GAAOE,UApBX,MAoBiCC,YAEhDC,eAPK,SAOWJ,GACd,OAAOC,IAAUD,GAAOK,MAvBX,MAuB6BF,+BC1B1CI,EAAsB,CAC1B3D,EAAG4D,IAAOC,SAAS,GAAI,KACvB1D,EAAGyD,IAAOC,SAAS,EAAG,MAGxB,SAASC,EAAmBC,EAAYrD,GACtC,IAAIsD,EAAOH,EAAUI,EAYrB,MAVc,MAAVvD,GACFuD,EAAOL,IAAOG,GAAYG,SAASP,EAAoBxD,GACvD0D,EAAWF,EAAoBxD,EAC/B6D,EAAQJ,IAAOG,GAAYG,SAASP,EAAoB3D,KAExDiE,EAAOF,EACPF,EAAWF,EAAoB3D,EAC/BgE,EAAQJ,IAAOG,GAAYG,SAASP,EAAoB3D,IAGnD,CACLgE,QACAH,WACAI,QAIJ,SAASE,EAAoBJ,EAAYrD,GACvC,OACIoD,EAAkBC,EADL,MAAVrD,EAC2B,IACA,KAGpC,SAAS0D,IACP,OAAOR,MAASS,IAAIV,EAAoB3D,mCC9BpCsE,GAAWlH,OAAOmH,YAAclH,+CAAYmH,qBAAuBjH,EAAOzB,SAC1E2I,GAAY,GAAAC,OAAMtH,OAAOuH,SAASC,SAAtB,MAAAF,OAAmCtH,OAAOuH,SAASE,MAAnDH,OAA0DJ,IAE5E,SAASQ,GAAcrE,GAA4B,IAC7CsE,EAAQC,EAAQC,EAAWC,EAASC,EAASC,EAAeC,EADrCC,EAAsBhD,UAAAiD,OAAA,QAAAC,IAAAlD,UAAA,IAAAA,UAAA,GAGjD,GAAIgD,EAAc,KAAAG,EAC6BhF,EAAKW,OAA5C4D,EADUS,EACbzF,EAAc+E,EADDU,EACFtF,EAAiB8E,EADfQ,EACSC,KADT,IAAAC,EAEelF,EAAKmF,QAA7BT,EAFSQ,EAEZ3F,EAAekF,EAFHS,EAEAxF,EAFA,IAAA0F,EAG2BpF,EAAKZ,aAAzCwF,EAHSQ,EAGZ7F,EAAqBoF,EAHTS,EAGM1F,MACjB,KAAA2F,EACwCrF,EAAKW,OAA5C2D,EADDe,EACF9F,EAAcgF,EADZc,EACS3F,EAAiB8E,EAD1Ba,EACoBJ,KADpB,IAAAK,EAE0BtF,EAAKmF,QAA7BV,EAFFa,EAED/F,EAAemF,EAFdY,EAEW5F,EAFX,IAAA6F,EAGsCvF,EAAKZ,aAAzCuF,EAHFY,EAGDhG,EAAqBqF,EAHpBW,EAGiB7F,EAGxB,IAAM8F,EAAY,CAChBC,KAAMnB,EAAO1D,SACb8E,MAAOpB,EAAO3B,MACdgD,SAAUd,EAAe7E,EAAK4F,aAAatB,EAAO1D,UAAU4B,QAAUiC,EAAQoB,UAAU,GACxFC,qBAAsBjB,EAAeJ,EAAQoB,UAAU,GAAK7F,EAAK4F,aAAatB,EAAO1D,UAAU4B,QAE/FuD,KAAMxB,EAAO3D,SACboF,MAAOzB,EAAO5B,MACdsD,SAAUpB,EAAe7E,EAAK4F,aAAarB,EAAO3D,UAAU4B,QAAUkC,EAAQmB,UAAU,GACxFK,qBAAsBrB,EAAeH,EAAQmB,UAAU,GAAK7F,EAAK4F,aAAarB,EAAO3D,UAAU4B,QAE/F2D,MAAO3B,EAAU7B,MAEjByD,UAAWzB,EAAcnF,KAAKC,KAC9B4G,UAAWzB,EAAcpF,KAAKC,KAE9B6G,WAAY3B,EAAcnF,KAAK+G,MAC/BC,WAAY5B,EAAcpF,KAAK+G,MAE/BpE,WAAYnC,EAAKyG,aAAatE,WAE9BmB,WAAYtD,EAAKsD,WAAWoD,OAE5BC,UAA2B,IAAjB9B,GAGZ,SAAAZ,OAAUD,GAAV,KAAAC,OAA0B2C,KAAYC,UAAUrB,IAGlD,SAASsB,GAAmB5C,GAAU,IAAA6C,EACpC,GAAK7C,EAASzE,KAAd,CACA,IAAM+F,EAAYoB,KAAYI,MAAM9C,EAASzE,KAAKwH,QAAQ,IAAK,KAE/D,MAAO,CACLtG,OAAQ,CACNpB,EAAG,CAAEqB,SAAU4E,EAAUC,KAAM9C,MAAOuE,WAAW1B,EAAUE,QAC3DhG,EAAG,CAAEkB,SAAU4E,EAAUO,KAAMpD,MAAOuE,WAAW1B,EAAUQ,QAC3Df,KAAM,CAAEtC,MAAOuE,WAAW1B,EAAUW,SAEtChB,QAAS,CACP5F,EAAG,CAAEsG,UAAW,CAACL,EAAUG,WAC3BjG,EAAG,CAAEmG,UAAW,CAACL,EAAUS,YAE7BL,cAAYmB,EAAA,GAAA5I,OAAAgJ,EAAA,EAAAhJ,CAAA4I,EACTvB,EAAUC,KAAO,CAAEjD,QAASgD,EAAUM,uBAD7B3H,OAAAgJ,EAAA,EAAAhJ,CAAA4I,EAETvB,EAAUO,KAAO,CAAEvD,QAASgD,EAAUU,uBAF7Ba,GAIZ3H,aAAc,CACZG,EAAG,CAAEC,KAAM,CAAEC,KAAM+F,EAAUY,UAAWG,MAAOf,EAAUc,YAAc1G,MAAO,IAC9EF,EAAG,CAAEF,KAAM,CAAEC,KAAM+F,EAAUa,UAAWE,MAAOf,EAAUgB,YAAc5G,MAAO,KAEhF6G,aAAc,CACZtE,WAAYqD,EAAUrD,YAExBmB,WAAYH,IAAOuD,KAAKlB,EAAUlC,YAClCqD,SAAiC,SAAvBnB,EAAUmB,SACpBS,KAAMlD,EAASmD,OC9DnB,IAAMpI,GAAQ,CACZqI,aAAc,eACdC,SAAU,WACVC,eAAgB,iBAChBC,SAAU,WACVC,gBAAiB,mBAWnB,SAASC,GAAerE,GACtB,MAAO,CAAEvC,KAAM9B,GAAMuI,eAAgBlE,cAGvC,SAASsE,GAASR,GAChB,MAAO,CAAErG,KAAM9B,GAAMwI,SAAUL,QAGjC,SAASS,GAAeC,GACtB,MAAO,CAAE/G,KAAM9B,GAAMyI,gBAAiBI,cAGxC,SAASC,KACPC,MAAM,oHAGOC,qFAAf,SAAAC,EAA0B7I,EAAUmC,GAApC,IAAA2G,EAAAxH,EAAAwE,EAAAS,EAAAa,EAAAnD,EAAA8D,EAAAT,EAAAvG,EAAA+B,EAAAiG,EAAAnG,EAAAoG,EAAA9B,EAAA+B,EAAAC,EAAAC,EAAA,OAAAlI,EAAAf,EAAAgB,KAAA,SAAAkI,GAAA,cAAAA,EAAAhI,KAAAgI,EAAA/H,MAAA,UAAAyH,EASM3G,IAAWxB,KAPbW,EAFJwH,EAEIxH,OACAwE,EAHJgD,EAGIhD,QACAS,EAJJuC,EAIIvC,aACAa,EALJ0B,EAKI1B,aACAnD,EANJ6E,EAMI7E,WACA8D,EAPJe,EAOIf,KACAT,EARJwB,EAQIxB,SAEIvG,EAASpC,EAAU2C,EAAOpB,EAAEqB,UAC9BuB,EAAasE,EAAatE,WAXhC,CAAAsG,EAAA/H,KAAA,gBAaU0H,EAbV,GAAAnE,OAayBtD,EAAOpB,EAAEoD,OAblCsB,OAa0CtD,EAAOpB,EAAEqB,UAbnDqD,OAa8DtD,EAAOjB,EAAEiD,OAbvEsB,OAa+EtD,EAAOjB,EAAEkB,UAbxFqD,OAamGkB,EAAQ5F,EAAEsG,UAAU,IAbvH5B,OAa4H2B,EAAajF,EAAOpB,EAAEqB,UAAU4B,SAb5JyB,OAasKkB,EAAQzF,EAAEmG,UAAU,IAb1L5B,OAa+L2B,EAAajF,EAAOjB,EAAEkB,UAAU4B,SAb/NiG,EAAA/H,KAAA,EAcyBN,EAAOsI,eAAeN,GAd/C,OAcUnG,EAdVwG,EAAA3H,KAeIqB,EAAawG,SAAOC,OAAO3G,GAC3B5C,EAASwJ,EAAc7G,UAAUC,IAhBrC,eAoBM0E,EACF0B,EAAiBhF,EAAkBC,EAAY,KAAKE,MAEpD6E,EAAiB1E,IACjBtE,EAASsI,GAAcU,KAxB3BI,EAAA/H,KAAA,GA2BsBN,EAAO0I,iBA3B7B,eA2BQvC,EA3BRkC,EAAA3H,KA4BQwH,EAAclG,EAAWzB,EAAOpB,EAAEqB,UAAUmC,eAAepC,EAAOpB,EAAEoD,OACpE4F,EAAqB,CACzBD,EACA1C,EAAajF,EAAOpB,EAAEqB,UAAU4B,QAChC2C,EAAQ5F,EAAEsG,UAAU,GACpB1D,EACAkG,EAAe3B,QAEb5J,EAAOvB,OACTU,QAAQC,IAAI,kBAAmBqM,GArCnCE,EAAA/H,KAAA,GAuCuBN,EAAO2I,aAAPnH,MAAAxB,EAAuBmI,GAvC9C,QAuCQC,EAvCRC,EAAA3H,KAwCEzB,EAAS2J,EAAmB7H,eAAe,IAAK,OAAQ,CAAE1B,KAAM+I,EAAQjC,WACxElH,EAAS4J,IACJ7B,GACH/H,EAASuI,GAAQvD,GAAa7C,IAAWxB,QA3C7C,yBAAAyI,EAAAzH,SAAAkH,EAAAjH,6EAgEA,SAAAiI,EAA8C7J,EAAUmC,GAAxD,IAAA2H,EAAAC,EAAAxI,EAAA+B,EAAAkD,EAAAD,EAAAa,EAAArH,EAAAkE,EAAAlD,EAAAkI,EAAA,OAAAhI,EAAAf,EAAAgB,KAAA,SAAA8I,GAAA,cAAAA,EAAA5I,KAAA4I,EAAA3I,MAAA,OAAAyI,EAQM3H,IAAWxB,KARjBoJ,EAAAD,EAEIxI,OAAUjB,EAAKkB,EAFnBwI,EAEmBxI,SAAU+B,EAF7ByG,EAE6BzG,MACTkD,EAHpBsD,EAGIhE,QAAWzF,EAAKmG,UAChBD,EAJJuD,EAIIvD,aACAa,EALJ0C,EAKI1C,aACArH,EANJ+J,EAMI/J,aACAkE,EAPJ6F,EAOI7F,WAEIlD,EAASpC,EAAU4C,GACnB0H,EAAclG,EAAWxB,GAAUmC,eAAeJ,GAV1D,cAAA0G,EAAA3I,KAAA,EAY+BN,EAAOkJ,8BAA8BlK,EAAaM,EAAEF,KAAKC,KAAM6I,EAAazC,EAAU,GAAID,EAAahF,GAAU4B,QAASiE,EAAatE,WAAYmB,EAAWoD,QAZ7L,WAAA2C,EAAAvI,KAAA,CAAAuI,EAAA3I,KAAA,gBAcMrB,EAASwI,IAAc,IAd7BwB,EAAAE,OAAA,2BAAAF,EAAA3I,KAAA,GAiBU9B,EAAM,KAjBhB,QAAAyK,EAAA3I,KAAA,iCAAA2I,EAAArI,SAAAkI,EAAAjI,yCAqBeuI,qFAAf,SAAAC,EAA4CpK,EAAUmC,GAAtD,IAAAkI,EAAAC,EAAA/I,EAAA+B,EAAAkD,EAAAD,EAAAa,EAAAnD,EAAAlD,EAAAkI,EAAAD,EAAAuB,EAAA,OAAAtJ,EAAAf,EAAAgB,KAAA,SAAAsJ,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAAnJ,MAAA,cAAAgJ,EAOMlI,IAAWxB,KAPjB2J,EAAAD,EAEI/I,OAAUjB,EAAKkB,EAFnB+I,EAEmB/I,SAAU+B,EAF7BgH,EAE6BhH,MACTkD,EAHpB6D,EAGIvE,QAAWzF,EAAKmG,UAChBD,EAJJ8D,EAII9D,aACAa,EALJiD,EAKIjD,aACAnD,EANJoG,EAMIpG,WAEIlD,EAASpC,EAAU4C,GACnB0H,EAAclG,EAAWxB,GAAUmC,eAAeJ,GAClD0F,EAAiBhF,EAAkBC,EAAY,KAAKE,KAV5DqG,EAAAnJ,KAAA,EAWoCN,EAAOoJ,4BAA4BlB,EAAazC,EAAU,GAAID,EAAahF,GAAU4B,QAASiE,EAAatE,WAAYkG,EAAe3B,QAX1K,OAWQkD,EAXRC,EAAA/I,KAYEzB,EAAS2J,EAAmB7H,eAAe,IAAK,OAAQyI,IAZ1D,wBAAAC,EAAA7I,SAAAyI,EAAAxI,gCAwBA,SAAS6I,KACP,sBAAAC,EAAA5L,OAAAkD,EAAA,EAAAlD,CAAAmC,EAAAf,EAAA+B,KAAO,SAAA0I,EAAO3K,EAAUmC,GAAjB,IAAAyI,EAAAtJ,EAAAwE,EAAA/F,EAAAwG,EAAAa,EAAAnD,EAAAqD,EAAAvG,EAAAiI,EAAA6B,EAAA,OAAA5J,EAAAf,EAAAgB,KAAA,SAAA4J,GAAA,cAAAA,EAAA1J,KAAA0J,EAAAzJ,MAAA,cAAAuJ,EASDzI,IAAWxB,KAPbW,EAFGsJ,EAEHtJ,OACAwE,EAHG8E,EAGH9E,QACA/F,EAJG6K,EAIH7K,aACAwG,EALGqE,EAKHrE,aACAa,EANGwD,EAMHxD,aACAnD,EAPG2G,EAOH3G,WACAqD,EARGsD,EAQHtD,SAEIvG,EAASpC,EAAU2C,EAAOpB,EAAEqB,UAC5ByH,EAAiBhF,EAAkBC,EAAYqD,EAAW,IAAM,KAAKnD,KAXtE2G,EAAAzJ,KAAA,EAY0BN,EAAOgK,yBAAyBhL,EAAaG,EAAEC,KAAKC,KAAMmG,EAAajF,EAAOpB,EAAEqB,UAAU4B,QAAS2C,EAAQ5F,EAAEsG,UAAU,GAAIY,EAAatE,WAAYkG,EAAe3B,QAZ7L,OAYCwD,EAZDC,EAAArJ,KAaLzB,EAASwJ,EAAc7G,UAAUkI,EAAiBjI,SAClD5C,EAAS2J,EAAmB7H,eAAe,IAAK,QAAS+I,IACzD7K,EAASgL,eAAK,YAfT,wBAAAF,EAAAnJ,SAAAgJ,EAAA/I,SAAP,gBAAAqJ,EAAAC,GAAA,OAAAR,EAAAnI,MAAAX,KAAAY,YAAA,YAmBa2I,qFAAf,SAAAC,EAA4BpL,EAAUmC,GAAtC,IAAAkJ,EAAA/J,EAAAwE,EAAAS,EAAAxG,EAAAqH,EAAAE,EAAArD,EAAAlD,EAAAmG,EAAA8B,EAAAsC,EAAAnC,EAAA,OAAAlI,EAAAf,EAAAgB,KAAA,SAAAqK,GAAA,cAAAA,EAAAnK,KAAAmK,EAAAlK,MAAA,cAAAgK,EASMlJ,IAAWxB,KAPbW,EAFJ+J,EAEI/J,OACAwE,EAHJuF,EAGIvF,QACAS,EAJJ8E,EAII9E,aACAxG,EALJsL,EAKItL,aACAqH,EANJiE,EAMIjE,aACAE,EAPJ+D,EAOI/D,SACArD,EARJoH,EAQIpH,WAEIlD,EAASpC,EAAU2C,EAAOjB,EAAEkB,UAVpCgK,EAAAlK,KAAA,EAWsBN,EAAO0I,iBAX7B,cAWQvC,EAXRqE,EAAA9J,KAYQuH,EAAiB3E,EAAmBJ,EAAYqD,EAAW,IAAM,KAAKnD,KACtEmH,EAAkB,CACtBvL,EAAaM,EAAEF,KAAKC,KACpB0F,EAAQzF,EAAEmG,UAAU,GACpBD,EAAajF,EAAOjB,EAAEkB,UAAU4B,QAChCiE,EAAaxE,OACboG,EAAe3B,QAEb5J,EAAOvB,OACTU,QAAQC,IAAI,gBAAiByO,GArBjCC,EAAAlK,KAAA,GAuBuBN,EAAOyK,UAAPjJ,MAAAxB,EAAoBuK,GAvB3C,QAuBQnC,EAvBRoC,EAAA9J,KAwBEzB,EAAS2J,EAAmB7H,eAAe,IAAK,QAAS,CAAE1B,KAAM+I,EAAQjC,WACzElH,EAAS4J,IAzBX,yBAAA2B,EAAA5J,SAAAyJ,EAAAxJ,yCA2DegI,qFAAf,SAAA6B,EAAkCzL,EAAUmC,GAA5C,IAAAuJ,EAAApE,EAAArD,EAAA+E,EAAA,OAAA/H,EAAAf,EAAAgB,KAAA,SAAAyK,GAAA,cAAAA,EAAAvK,KAAAuK,EAAAtK,MAAA,OAAAqK,EAIMvJ,IAAWxB,KAFb2G,EAFJoE,EAEIpE,SACArD,EAHJyH,EAGIzH,WAGI+E,EAAiBhF,EAAkBC,EAAYqD,EAAW,IAAM,KAAKnD,MACzD,EAPpB,WASkBL,MAAS8H,QAAQ5C,GATnC,CAAA2C,EAAAtK,KAAA,eAAAsK,EAAAzB,OAAA,0BAAAyB,EAAAtK,KAAA,EAWU9B,EAAM,KAXhB,OAAAoM,EAAAtK,KAAA,gBAaErB,EAASgL,eAAK,YAbhB,yBAAAW,EAAAhK,SAAA8J,EAAA7J,gCAgBA,IAAMC,GAAU,CACdgK,YArOF,WACE,MAAO,CAAEnK,KAAM9B,GAAMqI,eAqOrBnI,QAlOF,SAAkBG,GAChB,MAAO,CAAEyB,KAAM9B,GAAMsI,SAAUjI,SAkO/BqI,iBACAC,WACAC,iBACAkB,aAnKF,WACE,OAAA3H,EAAAjD,OAAAkD,EAAA,EAAAlD,CAAAmC,EAAAf,EAAA+B,KAAO,SAAAC,EAAOlC,EAAUmC,GAAjB,OAAAlB,EAAAf,EAAAgB,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EACCuH,GAAU5I,EAAUmC,GADrB,OAELnC,EAASwI,IAAc,IACvBxI,EAASgL,eAAK,sBAHT,wBAAA5I,EAAAT,SAAAO,EAAAN,SAAP,SAAAkK,EAAAC,GAAA,OAAAhK,EAAAQ,MAAAX,KAAAY,YAAA,IAAAT,GAmKAiK,YA5JF,WACE,OAAAC,EAAAnN,OAAAkD,EAAA,EAAAlD,CAAAmC,EAAAf,EAAA+B,KAAO,SAAAvB,EAAOV,EAAUmC,GAAjB,OAAAlB,EAAAf,EAAAgB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACCuH,GAAU5I,EAAUmC,GADrB,OAELnC,EAASyK,MACTzK,EAASgL,eAAK,aACdtC,KAJK,wBAAAvH,EAAAQ,SAAAjB,EAAAkB,SAAP,SAAAsK,EAAA7J,GAAA,OAAA4J,EAAA1J,MAAAX,KAAAY,YAAA,IAAAyJ,GA4JA9B,+BACAF,6EACAkC,wBAlHF,WACE,OAAAC,EAAAtN,OAAAkD,EAAA,EAAAlD,CAAAmC,EAAAf,EAAA+B,KAAO,SAAAoK,EAAOrM,EAAUmC,GAAjB,OAAAlB,EAAAf,EAAAgB,KAAA,SAAAoL,GAAA,cAAAA,EAAAlL,KAAAkL,EAAAjL,MAAA,cACLrB,EAASgL,eAAK,aACdtC,KAFK4D,EAAAjL,KAAA,EAGC8I,GAA4BnK,EAAUmC,GAHvC,OAILnC,EAASgL,eAAK,YAJT,wBAAAsB,EAAA3K,SAAA0K,EAAAzK,SAAP,SAAA2K,EAAAC,GAAA,OAAAJ,EAAA7J,MAAAX,KAAAY,YAAA,IAAA4J,GAkHA3B,oBACAb,qBACA6C,WA5DF,WACE,OAAAC,EAAA5N,OAAAkD,EAAA,EAAAlD,CAAAmC,EAAAf,EAAA+B,KAAO,SAAA0K,EAAO3M,EAAUmC,GAAjB,OAAAlB,EAAAf,EAAAgB,KAAA,SAAA0L,GAAA,cAAAA,EAAAxL,KAAAwL,EAAAvL,MAAA,cAAAuL,EAAAvL,KAAA,EACC8J,GAAYnL,EAAUmC,GADvB,OAELnC,EAASgL,eAAK,eAFT,wBAAA4B,EAAAjL,SAAAgL,EAAA/K,SAAP,SAAAiL,EAAAC,GAAA,OAAAJ,EAAAnK,MAAAX,KAAAY,YAAA,IAAAkK,GA4DAK,WAtDF,WACE,OAAAC,EAAAlO,OAAAkD,EAAA,EAAAlD,CAAAmC,EAAAf,EAAA+B,KAAO,SAAAgL,EAAOjN,EAAUmC,GAAjB,IAAA+K,EAAA5L,EAAAwE,EAAAS,EAAAxG,EAAAqH,EAAAE,EAAArD,EAAAlD,EAAAiI,EAAA,OAAA/H,EAAAf,EAAAgB,KAAA,SAAAiM,GAAA,cAAAA,EAAA/L,KAAA+L,EAAA9L,MAAA,cAAA6L,EASD/K,IAAWxB,KAPbW,EAFG4L,EAEH5L,OACAwE,EAHGoH,EAGHpH,QACAS,EAJG2G,EAIH3G,aACAxG,EALGmN,EAKHnN,aACAqH,EANG8F,EAMH9F,aACAE,EAPG4F,EAOH5F,SACArD,EARGiJ,EAQHjJ,WAGIlD,EAASpC,EAAU2C,EAAOpB,EAAEqB,UAC5ByH,EAAiBhF,EAAkBC,EAAYqD,EAAW,IAAM,KAAKnD,KAZtEgJ,EAAA9L,KAAA,EAaCN,EAAOgM,WACXhN,EAAaG,EAAEC,KAAKC,KACpBmG,EAAajF,EAAOpB,EAAEqB,UAAU4B,QAChC2C,EAAQ5F,EAAEsG,UAAU,GACpBY,EAAatE,WACbkG,EAAe3B,QAlBZ,wBAAA8F,EAAAxL,SAAAsL,EAAArL,SAAP,SAAAwL,EAAAC,GAAA,OAAAL,EAAAzK,MAAAX,KAAAY,YAAA,IAAAwK,2CChNIpN,GAAQ,CACZ0N,sBAAuB,wBACvBC,cAAe,gBACfC,eAAgB,iBAChBC,kBAAmB,qBAuDrB,SAASC,GAAc9M,EAAO+M,GAC5B,MAAO,CAAEjM,KAAM9B,GAAM2N,cAAe3M,QAAO+M,UAG7C,SAASC,GAAehN,EAAO4F,EAAWqH,GACxC,MAAO,CAAEnM,KAAM9B,GAAM4N,eAAgB5M,QAAO4F,YAAWqH,WAOzD,IAAMhM,GAAU,CACdiM,cAjEF,SAAwBlN,EAAOW,EAAUoM,GACvC,OAAA5L,EAAAjD,OAAAkD,EAAA,EAAAlD,CAAAmC,EAAAf,EAAA+B,KAAO,SAAAC,EAAOlC,EAAUmC,GAAjB,IAAAyI,EAAAtJ,EAAAwE,EAAAwB,EAAA/F,EAAAR,EAAAgN,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3H,EAAA4H,EAAAC,EAAAC,EAAAC,EAAAC,EAAArL,EAAAsL,EAAAC,EAAAb,EAAAc,EAAA,OAAA1N,EAAAf,EAAAgB,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAuJ,EAKDzI,IAAWxB,KAHbW,EAFGsJ,EAEHtJ,OACAwE,EAHG8E,EAGH9E,QACAwB,EAJGsD,EAIHtD,SAGI/F,EAAWD,EAAOV,GAAOW,SACzBR,EAASpC,EAAU4C,GAER,QAAbA,GACFjE,OAAOJ,SAAS0R,SAGlB5O,EAAS0N,GAAa9M,EAAO+M,IACvBI,EAAmB,GAfpB3L,EAAAf,KAAA,EAgBwBN,EAAO8N,mBAhB/B,OAgBCb,EAhBD5L,EAAAX,KAgBmD0B,QACpD8K,GAAuB,EACvBC,EAAgB,GAChBC,EAAiB,EAnBhB,WAoBGF,EApBH,CAAA7L,EAAAf,KAAA,gBAAAe,EAAAf,KAAA,GAqBmBN,EAAO+N,aAAaX,EAAgBJ,GArBvD,QAsBHvH,GADIA,EArBDpE,EAAAX,MAsBmBsN,IAAI,SAAAC,GAAI,OAAIA,EAAK7L,UAtBpCiL,GAAA,EAAAC,GAAA,EAAAC,OAAA5I,EAAAtD,EAAAhB,KAAA,GAAAmN,EAuBmB/H,EAvBnByI,OAAAC,YAAA,WAAAd,GAAAI,EAAAD,EAAAlN,QAAA8N,KAAA,CAAA/M,EAAAf,KAAA,aAuBQ8B,EAvBRqL,EAAAlL,SAwBe0K,EAxBf,CAAA5L,EAAAf,KAAA,gBAyBC4M,GAAuB,EAzBxB7L,EAAA8H,OAAA,oBA4BDgE,EAAclD,KAAK7H,GA5BlB,QAAAiL,GAAA,EAAAhM,EAAAf,KAAA,iBAAAe,EAAAf,KAAA,iBAAAe,EAAAhB,KAAA,GAAAgB,EAAAgN,GAAAhN,EAAA,UAAAiM,GAAA,EAAAC,EAAAlM,EAAAgN,GAAA,QAAAhN,EAAAhB,KAAA,GAAAgB,EAAAhB,KAAA,GAAAgN,GAAA,MAAAG,EAAAc,QAAAd,EAAAc,SAAA,WAAAjN,EAAAhB,KAAA,IAAAiN,EAAA,CAAAjM,EAAAf,KAAA,eAAAiN,EAAA,eAAAlM,EAAAkN,OAAA,mBAAAlN,EAAAkN,OAAA,YA8BHnB,GAAkBJ,EA9Bf3L,EAAAf,KAAA,wBAiCDoN,EAjCC,CAiCeT,GAjCfpJ,OAiCiCsJ,GAClC5G,IACIoH,EAAkB5I,EAAQlF,GAAO4F,UAAU,GAC7CiI,EAAac,SAASb,KACxBD,EAAY,CAAIC,GAAJ9J,OAAA9F,OAAA0Q,GAAA,EAAA1Q,CAAwB2P,EAAagB,OAAO,SAAAtM,GAAO,OAAIA,IAAYuL,QArC9EtM,EAAAf,KAAA,GAyCiBN,EAAO2O,WAAWjB,GAzCnC,QAyCCZ,EAzCDzL,EAAAX,KA0CCkN,EAAmB5L,EAAWxB,GAAU8B,eAAewK,GAAS8B,QAAQ,GAC9E3P,EAAS4N,GAAchN,EAAO6N,EAAcE,IA3CvC,yBAAAvM,EAAAT,SAAAO,EAAAN,KAAA,gCAAP,SAAAgO,EAAAC,GAAA,OAAA9N,EAAAQ,MAAAX,KAAAY,YAAA,IAAAT,GAiEA+N,oBAlBF,SAA8BlP,EAAOmP,GACnC,MAAO,CAAErO,KAAM9B,GAAM0N,sBAAuB1M,QAAOmP,WAkBnDrC,gBACAE,iBACAoC,iBATF,SAA2BpP,GACzB,MAAO,CAAEc,KAAM9B,GAAM6N,kBAAmB7M,WC5B3BqP,4LAtCH,IAAAC,EAAAtO,KACFuO,EAAU,CAAC,SAAU,OAmB3B,OAjBIvO,KAAKwO,MAAMC,WACbF,EAAQnF,KAAKpJ,KAAKwO,MAAMC,WAGtBzO,KAAKwO,MAAME,QACbH,EAAQnF,KAAK,eACJpJ,KAAKwO,MAAMG,WACpBJ,EAAQnF,KAAK,iBAGXpJ,KAAKwO,MAAMI,MACbL,EAAQnF,KAAK,eAEXpJ,KAAKwO,MAAMK,OACbN,EAAQnF,KAAK,gBAGR0F,EAAAxQ,EAAAyQ,cAAA,UAAQN,UAAWF,EAAQS,KAAK,KAAMC,SAAUjP,KAAKwO,MAAMS,SAAUC,QAAS,SAAAC,GAAC,OAAIb,EAAKE,MAAMU,QAAQC,KAC1GnP,KAAKwO,MAAMpN,MAAQ0N,EAAAxQ,EAAAyQ,cAAA,QAAMK,MAAM,eAAcN,EAAAxQ,EAAAyQ,cAAA,OAAKM,IAAKrP,KAAKwO,MAAMpN,QAClEpB,KAAKwO,MAAMc,iBAvBGC,6ECcNrL,GAdC,CACdsL,SAAY,CACVpO,KAAMoO,KACNC,KAAM,YAERC,OAAU,CACRtO,KAAMsO,KACND,KAAM,UAERE,cAAiB,CACfvO,KAAMwO,4BCsBKC,WA1BO,SAACrB,GAAD,OACpBM,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,iBACTN,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,qBAAqBC,IAAKnL,GAAQsK,EAAM1O,MAAQoE,GAAQsK,EAAM1O,MAAMsB,KAAO0O,OACtFhB,EAAAxQ,EAAAyQ,cAAA,KAAGK,MAAM,yBAA0BZ,EAAMjN,SAAWiN,EAAMjN,SACxDiN,EAAMuB,UACJjB,EAAAxQ,EAAAyQ,cAACiB,GAAD,CAAQnB,OAAK,EAACF,WAAS,EAACS,MAAM,wBAAwBF,QAAS,SAAAC,GAAC,OAAIX,EAAMyB,cAAcd,KAAxF,iBACAL,EAAAxQ,EAAAyQ,cAACiB,GAAD,CAAQnB,OAAK,EAACH,SAAO,EAACU,MAAM,8BAA8BF,QAAS,SAAAC,GAAC,OAAIX,EAAMyB,cAAcd,KAA5F,kBAEFX,EAAMvC,SACN6C,EAAAxQ,EAAAyQ,cAAA,WACED,EAAAxQ,EAAAyQ,cAAA,sBACAD,EAAAxQ,EAAAyQ,cAAA,KAAGK,MAAM,yBAAyBZ,EAAMvC,QAAxC,IAAkD9K,EAAWqN,EAAM7O,UAAU3C,8BCetEkT,WA3BM,SAAC1B,GAAD,OACnBM,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,gBACbK,EAAAxQ,EAAAyQ,cAAA,UAAKP,EAAM2B,OACXrB,EAAAxQ,EAAAyQ,cAAA,SAAIP,EAAM4B,UACVtB,EAAAxQ,EAAAyQ,cAAA,sBAAcP,EAAM7O,SAAS0Q,eAC5B7B,EAAMtK,QAAQiJ,IAAI,SAACpB,GAAD,OACjB+C,EAAAxQ,EAAAyQ,cAAA,WACED,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,uBACTN,EAAAxQ,EAAAyQ,cAAA,SAAGD,EAAAxQ,EAAAyQ,cAAA,KAAG3I,KAAK,KAAR,iBACH0I,EAAAxQ,EAAAyQ,cAAA,OAAKM,IAAKnL,GAAQ6H,GAAQ3K,KAAMqN,UAAU,0BAC1CK,EAAAxQ,EAAAyQ,cAAA,UAAK7K,GAAQ6H,GAAQ0D,MACrBX,EAAAxQ,EAAAyQ,cAAA,SAAGD,EAAAxQ,EAAAyQ,cAAA,KAAG3I,KAAK,KAAR,yBAEL0I,EAAAxQ,EAAAyQ,cAACiB,GAAD,CAAQpB,MAAI,EAACF,SAAO,EAACQ,QAAS,kBAAMV,EAAM1C,aAAaC,KAAvD,iBCeOuE,WA7BU,SAAC9B,GAAD,OACvBM,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,oBACbK,EAAAxQ,EAAAyQ,cAAA,UAAwB,QAAnBP,EAAM7O,SAAqB,oBAAsB,cAClC,QAAnB6O,EAAM7O,UAAsBmP,EAAAxQ,EAAAyQ,cAAA,6CAC7BD,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,2BACbK,EAAAxQ,EAAAyQ,cAAA,OAAKM,IAAKnL,GAAQsK,EAAMzC,QAAQ3K,KAAMqN,UAAU,0BAChDK,EAAAxQ,EAAAyQ,cAAA,UAAK7K,GAAQsK,EAAMzC,QAAQ0D,OAEX,WAAjBjB,EAAMzC,QACL+C,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,2BACbK,EAAAxQ,EAAAyQ,cAAA,OAAKM,IAAKnL,GAAQsK,EAAMzC,OAAS,WAAW3K,OAC5C0N,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,8BACbK,EAAAxQ,EAAAyQ,cAAA,gCAIND,EAAAxQ,EAAAyQ,cAACiB,GAAD,CAAQpB,MAAI,EAACF,SAAO,EAACQ,QAASV,EAAM+B,cAAe/B,EAAMgC,0BCI9CC,GApBS,SAACjC,GAAD,OACtBM,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,mBACbK,EAAAxQ,EAAAyQ,cAAA,UAAK7K,GAAQsK,EAAMzC,QAAQ0D,KAA3B,cACAX,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,0BACbK,EAAAxQ,EAAAyQ,cAAA,OAAKM,IAAKnL,GAAQsK,EAAMzC,QAAQ3K,KAAMqN,UAAU,0BAChDK,EAAAxQ,EAAAyQ,cAAA,UAAK7K,GAAQsK,EAAMzC,QAAQ0D,MAC3BX,EAAAxQ,EAAAyQ,cAAA,UCd0BxN,EDcPiN,EAAM5J,UAAU,GCbvC,GAAA5B,OAAUzB,EAAQmP,UAAU,EAAG,GAA/B,OAAA1N,OAAuCzB,EAAQmP,UAAUnP,EAAQsC,OAAS,ODexEiL,EAAAxQ,EAAAyQ,cAACiB,GAAD,CAAQpB,MAAI,EAACF,SAAO,EAACQ,QAASV,EAAMJ,kBAAmBI,EAAMmC,iBChB1D,IAAyBpP,GCsBjB2C,GAtBC,CACdtJ,IAAK,CACH8U,OAAQ,CACNkB,cAAc,EACdC,aAAc,oBACdC,gBAAiB,KAGrBtW,IAAK,CACHgV,SAAU,CACRoB,cAAc,EACdC,aAAc,oBACdC,gBAAiB,IAEnBpB,OAAQ,CACNkB,cAAc,EACdC,aAAc,oBACdC,gBAAiB,mEC4DRC,uBAnEb,SAAAA,EAAavC,GAAO,IAAAF,EAAA,OAAApR,OAAA8T,EAAA,EAAA9T,CAAA8C,KAAA+Q,IAClBzC,EAAApR,OAAA+T,EAAA,EAAA/T,CAAA8C,KAAA9C,OAAAgU,EAAA,EAAAhU,CAAA6T,GAAAI,KAAAnR,KAAMwO,KAED1C,aAAewC,EAAKxC,aAAasF,KAAlBlU,OAAAmU,GAAA,EAAAnU,QAAAmU,GAAA,EAAAnU,CAAAoR,KACpBA,EAAKF,iBAAmBE,EAAKF,iBAAiBgD,KAAtBlU,OAAAmU,GAAA,EAAAnU,QAAAmU,GAAA,EAAAnU,CAAAoR,KAJNA,4EAONvC,GAAQ,IAAAuF,EACKtR,KAAKwO,MAAtB/Q,EADY6T,EACZ7T,GAAIkC,EADQ2R,EACR3R,SACZK,KAAKwO,MAAM1C,aAAarO,EAAIkC,EAAUoM,8CAGpB,IACVtO,EAAOuC,KAAKwO,MAAZ/Q,GACRuC,KAAKwO,MAAMJ,iBAAiB3Q,oCAI5B,IACI8T,EADE/C,EAAQxO,KAAKwO,MAmCnB,OA/BE+C,EADE/C,EAAMgD,gBAEN1C,EAAAxQ,EAAAyQ,cAAC0C,GAAD,CACE7M,UAAW4J,EAAM5J,UACjBjF,SAAU6O,EAAM7O,SAChBgR,eAAe,aACfvC,iBAAkBpO,KAAKoO,iBACvBrC,OAAQyC,EAAMzC,SAITyC,EAAMkD,aAEb5C,EAAAxQ,EAAAyQ,cAAC4C,GAAD,CACExB,MAAOjM,GAAQsK,EAAM7O,UAAU6O,EAAMzC,QAAQ8E,aAC7Ce,SAAU1N,GAAQsK,EAAM7O,UAAU6O,EAAMzC,QAAQ+E,gBAChDN,WAAW,SACXD,aAAcvQ,KAAKoO,iBACnBzO,SAAU6O,EAAM7O,SAChBoM,OAAQyC,EAAMzC,SAIhB+C,EAAAxQ,EAAAyQ,cAAC8C,GAAD,CACE1B,MAAM,YACNC,SAAS,mIACTlM,QAA4B,QAAnBsK,EAAM7O,SAAqB,CAAC,YAAc,CAAC,UACpDmM,aAAc9L,KAAK8L,aACnBnM,SAAU6O,EAAM7O,WAKpBmP,EAAAxQ,EAAAyQ,cAAA,WACED,EAAAxQ,EAAAyQ,cAAC+C,GAAAxT,EAAD,CAAOb,GAAI+Q,EAAM/Q,GAAIsU,KAAMvD,EAAMuD,KAAMC,QAASxD,EAAMyD,aACpDnD,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,sBACbK,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,2BACX8C,aA3DiBhC,cCsDlB2C,4LAxDH,IAAA5D,EAAAtO,KAAAmS,EACyBnS,KAAKwO,MAAM9O,OAAjC2D,EADH8O,EACA7T,EAAcgF,EADd6O,EACW1T,EADX2T,EAE2BpS,KAAKwO,MAAMtK,QAAnCV,EAFH4O,EAEA9T,EAAemF,EAFf2O,EAEY3T,EAEpB,OAAOqQ,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,eAChBN,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,0CACTN,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,wBACTN,EAAAxQ,EAAAyQ,cAACsD,GAAD,CACE1S,SAAU0D,EAAO1D,SACjBG,KAAM0D,EAAQ1D,KACdmM,QAASzI,EAAQyI,QACjB1K,QAASiC,EAAQoB,UAAU,GAC3BmL,UAAWvM,EAAQuM,UACnBE,cAAe,SAACd,GAAD,OAAOb,EAAKE,MAAM8D,sBAAsB,IAAKnD,EAAEoD,mBAElEzD,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,yBACTN,EAAAxQ,EAAAyQ,cAACsD,GAAD,CACE1S,SAAU2D,EAAO3D,SACjBG,KAAM2D,EAAQ3D,KACdmM,QAASxI,EAAQwI,QACjB1K,QAASkC,EAAQmB,UAAU,GAC3BmL,UAAWtM,EAAQsM,UACnBE,cAAe,SAACd,GAAD,OAAOb,EAAKE,MAAM8D,sBAAsB,IAAKnD,EAAEoD,oBAGpEzD,EAAAxQ,EAAAyQ,cAACyD,GAAD,CACET,KAAMvO,EAAQiP,YACd9S,SAAU0D,EAAO1D,SACjBlC,GAAG,IACHiU,aAAclO,EAAQkP,OACtB3G,OAAQvI,EAAQ1D,KAChBgM,aAAc9L,KAAKwO,MAAMtC,cACzBkC,iBAAkBpO,KAAKwO,MAAMmE,qBAC7BC,SAAUpP,EAAQoP,SAClBhO,UAAWpB,EAAQoB,UACnB4M,gBAAiBhO,EAAQuM,UACzBkC,YAAa,SAAC9C,GAAD,OAAOb,EAAKE,MAAM8D,sBAAsB,IAAKnD,EAAEoD,kBAG9DzD,EAAAxQ,EAAAyQ,cAACyD,GAAD,CACET,KAAMtO,EAAQgP,YACd9S,SAAU2D,EAAO3D,SACjBlC,GAAG,IACHiU,aAAcjO,EAAQiP,OACtB3G,OAAQtI,EAAQ3D,KAChBgM,aAAc9L,KAAKwO,MAAMtC,cACzBkC,iBAAkBpO,KAAKwO,MAAMmE,qBAC7BC,SAAUnP,EAAQmP,SAClBhO,UAAWnB,EAAQmB,UACnB4M,gBAAiB/N,EAAQsM,UACzBkC,YAAa,SAAC9C,GAAD,OAAOb,EAAKE,MAAM8D,sBAAsB,IAAKnD,EAAEoD,0BAnD1ChD,cCM1BsD,GAAeC,kBARS,SAAAC,GACtB,MAAO,CACLrT,OAAQqT,EAAMhU,KAAKW,OACnBwE,QAAS6O,EAAMhU,KAAKmF,QACpBwB,SAAUqN,EAAMhU,KAAK2G,WAMvB,CACE4M,sBAAuBrS,GAAQiO,oBAC/BhC,cAAejM,GAAQiM,cACvB8G,kBAAmB/S,GAAQ+L,cAC3B2G,qBAAsB1S,GAAQmO,kBANlC,CAQE8D,yBCdIe,4LACM,IAAA3E,EAAAtO,KACR,OAAO8O,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,iBACpBK,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,gCACbK,EAAAxQ,EAAAyQ,cAAA,OAAKM,IAAKlO,EAAWnB,KAAKwO,MAAM0E,cAAc9R,KAAMqN,UAAU,iDAC9DK,EAAAxQ,EAAAyQ,cAAA,OAAKM,IAAKlO,EAAWnB,KAAKwO,MAAM2E,cAAc/R,KAAMqN,UAAU,kDAC9DK,EAAAxQ,EAAAyQ,cAAA,OAAKM,IAAK+D,KAAU3E,UAAU,2BAC7BzO,KAAKwO,MAAMpN,MAAQ0N,EAAAxQ,EAAAyQ,cAAA,OAAKM,IAAKrP,KAAKwO,MAAMpN,KAAMqN,UAAU,qBAAqBS,QAAS,SAACC,GAAD,OAAOb,EAAKE,MAAM6E,YAAYlE,OAEvHL,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,wBACbK,EAAAxQ,EAAAyQ,cAAA,MAAIN,UAAU,6BAA6BzO,KAAKwO,MAAM8E,WACtDxE,EAAAxQ,EAAAyQ,cAAA,MAAIN,UAAU,6BAA6BzO,KAAKwO,MAAM+E,oBAXlChE,cA0B5B0D,GAAcO,aAAe,CAC3BF,UAAW,OACXC,UAAW,QAGEN,UCnCTjV,GAAQ,CACZyV,cAAe,iBAyCjB,IAAMxT,GAAU,CACdyT,aAvCF,SAAuB1U,EAAO2U,GAC5B,OAAO,SAACvV,EAAUmC,GAChBnC,EAAS,CAAE0B,KAAM9B,GAAMyV,cAAezU,QAAO2U,aAC7C,IAAMjU,EAASa,IAAWxB,KAAKW,OAEzBpB,EAAI,CAACwB,KAAM,IAAK4B,MAAOhC,EAAOpB,EAAEoD,OAChCjD,EAAI,CAACqB,KAAM,IAAK4B,MAAOhC,EAAOjB,EAAEiD,OAChCsC,EAAO,CAAClE,KAAM,OAAQ4B,MAAOhC,EAAOsE,KAAKtC,OAE3CkS,EAAe1Z,IAAE2T,OAAO,CAACvP,EAAEG,EAAEuF,GAAO,SAAC6P,GACvC,OAAuB,OAAhBA,EAAMnS,OAAkC,MAAhBmS,EAAMnS,OAAiC,KAAhBmS,EAAMnS,QAE1DoS,EAAiB5Z,IAAE2T,OAAO,CAACvP,EAAEG,EAAEuF,GAAO,SAAC6P,GACzC,OAAuB,OAAhBA,EAAMnS,OAAkC,MAAhBmS,EAAMnS,OAAiC,KAAhBmS,EAAMnS,QAG1DqS,EAAoC,IAAxBH,EAAa/P,OACzBmQ,EAAoC,IAAxBJ,EAAa/P,OAEzBoQ,EAAgBD,GAAwC,MAA3BF,EAAe,GAAGhU,KAC/CoU,EAAgBF,GAAwC,MAA3BF,EAAe,GAAGhU,KAC/CqU,EAAmBH,GAAwC,SAA3BF,EAAe,GAAGhU,KAEtD,GAAI8T,EAAa/P,QAAU,EACzB,IAAMkQ,GAAuB,SAAV/U,GAAqBiV,IAA4B,MAAVjV,EAAe,CACvE,IAAIoV,IAASnO,WAAWxH,EAAEiD,OAASuE,WAAWjC,EAAKtC,QAAQqM,QAAQ,GACnE3P,EAAS,CAAE0B,KAAM9B,GAAMyV,cAAezU,MAAO,IAAK2U,SAAUS,EAAKC,kBAC5D,GAAIH,GAA2B,MAAVlV,EAAe,CACzC,IAAIsV,IAASrO,WAAW3H,EAAEoD,OAASuE,WAAWjC,EAAKtC,QAAQqM,QAAQ,GACnE3P,EAAS,CAAE0B,KAAM9B,GAAMyV,cAAezU,MAAO,IAAK2U,SAAUW,EAAKD,kBAC5D,IAAKN,GAAaI,IAA+B,SAAVnV,EAAkB,CAC9D,IAAIuV,IAAYtO,WAAW3H,EAAEoD,OAASuE,WAAWxH,EAAEiD,QAAQqM,QAAQ,GACnE3P,EAAS,CAAE0B,KAAM9B,GAAMyV,cAAezU,MAAO,OAAQ2U,SAAUY,EAAQF,iBChCzEG,WAAgB,SAAChG,GAAD,OACpBM,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,iBACbK,EAAAxQ,EAAAyQ,cAAA,MAAIN,UAAU,yBAAyBtN,EAAWqN,EAAM7O,UAAU3C,MAClE8R,EAAAxQ,EAAAyQ,cAAA,SAAOjP,KAAK,SAAS2U,SAAUjG,EAAMS,SAAUvN,MAAO8M,EAAM9M,MAAO+M,UAAU,sBAAsBiG,YAAY,OAAOC,SAAU,SAAAxF,GAAC,OAAIX,EAAMmG,SAASxF,EAAEhB,OAAOzM,aAYjK8S,GAAchB,aAAe,CAC3B9R,MAAO,GAGM8S,UCnBTI,WAAO,SAACpG,GAAD,OACXM,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,QACbK,EAAAxQ,EAAAyQ,cAAA,MAAIN,UAAU,gBAAd,QACAK,EAAAxQ,EAAAyQ,cAAA,MAAIN,UAAU,eAAcK,EAAAxQ,EAAAyQ,cAAA,mBAAW5N,EAAWqN,EAAMqG,WAAW7X,OACnE8R,EAAAxQ,EAAAyQ,cAAA,MAAIN,UAAU,cAAd,KACAK,EAAAxQ,EAAAyQ,cAAA,UACED,EAAAxQ,EAAAyQ,cAAA,SAAOjP,KAAK,SAAS2U,SAAUjG,EAAMS,SAAUvN,MAAO8M,EAAM9M,MAAO+M,UAAU,aAAaiG,YAAY,SAASC,SAAU,SAAAxF,GAAC,OAAIX,EAAMmG,SAASxF,EAAEhB,OAAOzM,UACrJP,EAAWqN,EAAMsG,WAAW9X,SAWnC4X,GAAKpB,aAAe,CAClB9R,MAAO,GAGMkT,UCiBAG,4LAtCH,IAAAzG,EAAAtO,KAAAmS,EAC0CnS,KAAKwO,MAAM9O,OAAlD2D,EADH8O,EACA7T,EAAcgF,EADd6O,EACW1T,EAAiB8E,EAD5B4O,EACsBnO,KAC9B,OAAO8K,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,kBACpBK,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,0CACbK,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,2BACbK,EAAAxQ,EAAAyQ,cAACiG,GAAD,CACErV,SAAU0D,EAAO1D,SACjB+B,MAAO2B,EAAO3B,MACduN,SAAUjP,KAAKwO,MAAMS,SACrB0F,SAAU,SAAAhB,GAAQ,OAAIrF,EAAKE,MAAMyG,eAAe,IAAKtB,OAEzD7E,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,4BACTN,EAAAxQ,EAAAyQ,cAACiG,GAAD,CACErV,SAAU2D,EAAO3D,SACjB+B,MAAO4B,EAAO5B,MACduN,SAAUjP,KAAKwO,MAAMS,SACrB0F,SAAU,SAAAhB,GAAQ,OAAIrF,EAAKE,MAAMyG,eAAe,IAAKtB,QAEvD3T,KAAKwO,MAAMS,UACXH,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,yBACbK,EAAAxQ,EAAAyQ,cAACmG,GAAD,CACEJ,UAAWzR,EAAO1D,SAClBkV,UAAWvR,EAAO3D,SAClB+B,MAAO6B,EAAU7B,MACjBuN,SAAUjP,KAAKwO,MAAMS,SACrB0F,SAAU,SAAAQ,GAAS,OAAI7G,EAAKE,MAAMyG,eAAe,OAAQE,gBA1B1C5F,cCMduD,qBAPS,SAACC,EAAOqC,GAC9B,MAAO,CACL1V,OAAQqT,EAAMhU,KAAKW,OACnBuP,SAAUmG,EAASnG,WAMrB,CACEoG,cAAezW,GAAYqL,YAC3BgL,eAAgBK,GAAa5B,cAJlBZ,CAMbiC,IClBI/W,GAAQ,CACZuX,6BAA8B,gCAOhC,IAAMtV,GAAU,CACduV,0BALF,SAAoC7V,EAAUgU,EAAU8B,GACtD,MAAO,CAAE3V,KAAM9B,GAAMuX,6BAA8B5V,WAAUgU,WAAU8B,8DCgC1DC,GA7BM,SAAClH,GACpB,IACImH,EADEF,EAAQtU,EAAWqN,EAAM7O,UAAU2B,eAAekN,EAAM9M,OAM9D,OAJK+T,IACHE,EAAgB,mBAGX7G,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,gBAChBN,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,wBACTN,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAW,qBAAuBgH,EAAQ,yBAA2B,6BACxE3G,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,oBAAoBC,IAAKlO,EAAWqN,EAAM7O,UAAUyB,OAC/D0N,EAAAxQ,EAAAyQ,cAAA,SAAOK,MAAM,qBACX1N,MAAO8M,EAAM9M,MACbiT,SAAU,SAAAxF,GAAC,OAAIX,EAAMmG,SAASxF,EAAEhB,OAAOzM,MAAOP,EAAWqN,EAAM7O,UAAU2B,eAAe6N,EAAEhB,OAAOzM,YAGrGoN,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,sBAAsBC,IAAKoG,EAAQG,KAAWC,QAE3D/G,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,wBAAwBuG,KCKxBG,4LAzBH,IAAAxH,EAAAtO,KAAAmS,EACyBnS,KAAKwO,MAAM9O,OAAjC2D,EADH8O,EACA7T,EAAcgF,EADd6O,EACW1T,EACbkG,EAAe3E,KAAKwO,MAAM7J,aAEhC,OAAOmK,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,uBAChBN,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,OACTN,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,OACTN,EAAAxQ,EAAAyQ,cAAA,MAAIK,MAAM,+BAAV,gBACAN,EAAAxQ,EAAAyQ,cAACgH,GAAD,CAAcpW,SAAU2D,EAAO3D,SAC7B+B,MAAOiD,EAAarB,EAAO3D,UAAU4B,QACrCoT,SAAU,SAAChB,EAAU8B,GAAX,OAAqBnH,EAAKE,MAAMwH,4BAA4B1S,EAAO3D,SAAUgU,EAAU8B,OAGrG3G,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,OACTN,EAAAxQ,EAAAyQ,cAAA,MAAIK,MAAM,+BAAV,WACAN,EAAAxQ,EAAAyQ,cAACgH,GAAD,CAAcpW,SAAU0D,EAAO1D,SAC7B+B,MAAOiD,EAAatB,EAAO1D,UAAU4B,QACrCoT,SAAU,SAAChB,EAAU8B,GAAX,OAAqBnH,EAAKE,MAAMwH,4BAA4B3S,EAAO1D,SAAUgU,EAAU8B,gBAlB3ElG,cCMnBuD,qBAPS,SAAAC,GACtB,MAAO,CACLrT,OAAQqT,EAAMhU,KAAKW,OACnBiF,aAAcoO,EAAMhU,KAAK4F,eAM3B,CACEqR,4BAA6B/V,GAAQuV,2BAH1B1C,CAKbgD,6CCsBaG,uBA9Bb,SAAAA,EAAazH,GAAO,IAAAF,EAAA,OAAApR,OAAA8T,EAAA,EAAA9T,CAAA8C,KAAAiW,IAClB3H,EAAApR,OAAA+T,EAAA,EAAA/T,CAAA8C,KAAA9C,OAAAgU,EAAA,EAAAhU,CAAA+Y,GAAA9E,KAAAnR,KAAMwO,KACDuE,MAAQ,CACX1Q,WAAYK,KAHI4L,mFAOC,IAAA4H,EAAAlW,KACnBA,KAAKmW,SAAWC,YAAY,WAC1BF,EAAKG,SAAS,CACZhU,WAAYK,OAEb,oDAIH4T,cAActW,KAAKmW,2CAInB,OAAOrH,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,2BAChBN,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,8BACTN,EAAAxQ,EAAAyQ,cAAA,WAAKD,EAAAxQ,EAAAyQ,cAAA,OAAKM,IAAKkH,KAAUnH,MAAM,iCAA/B,gBAA8EnN,EAAoB3D,EAAEkY,UAAUzI,QAAQ,GAAtH,QACAe,EAAAxQ,EAAAyQ,cAAA,WAAKD,EAAAxQ,EAAAyQ,cAAA,OAAKM,IAAKoH,KAAWrH,MAAM,iCAAhC,gBAA+EnN,EAAoBxD,EAAE+X,UAAUzI,QAAQ,GAAvH,QACAe,EAAAxQ,EAAAyQ,cAAA,WAAKD,EAAAxQ,EAAAyQ,cAAA,mBAAW/O,KAAK+S,MAAM1Q,WAAWqU,OAAO,2BAzBfnH,cCEvBuD,qBALS,SAAAC,GACtB,MAAO,IAMP,CACE5H,WAAYlL,GAAQkL,YAHT2H,CAKbmD,aCMaU,UAlBf,SAAyBC,GACvB,gBAAAC,GAAA,SAAAC,IAAA,OAAA5Z,OAAA8T,EAAA,EAAA9T,CAAA8C,KAAA8W,GAAA5Z,OAAA+T,EAAA,EAAA/T,CAAA8C,KAAA9C,OAAAgU,EAAA,EAAAhU,CAAA4Z,GAAAnW,MAAAX,KAAAY,YAAA,OAAA1D,OAAA6Z,EAAA,EAAA7Z,CAAA4Z,EAAAD,GAAA3Z,OAAA8Z,EAAA,EAAA9Z,CAAA4Z,EAAA,EAAAG,IAAA,kBAAAvV,MAAA,WAEI,IAAMwV,EAAYC,SAASpI,cAAc,SACzCmI,EAAUxV,MAAQ1B,KAAKwO,MAAMrI,KAC7B+Q,EAAUE,MAAQ,oCAClBD,SAASE,KAAKC,YAAYJ,GAC1BA,EAAUK,SACVJ,SAASK,YAAY,QACrBL,SAASE,KAAKI,YAAYP,KAR9B,CAAAD,IAAA,SAAAvV,MAAA,WAWY,IAAA4M,EAAAtO,KACR,OAAO8O,EAAAxQ,EAAAyQ,cAAC6H,EAAD1Z,OAAAwa,OAAA,CAAkBC,YAAa,kBAAMrJ,EAAKsJ,oBAAuB5X,KAAKwO,YAZjFsI,EAAA,CAAqBe,IAAMtI,gCCoGdoH,0BA3Fb,SAAAmB,EAAatJ,GAAO,IAAAF,EAAA,OAAApR,OAAA8T,EAAA,EAAA9T,CAAA8C,KAAA8X,IAClBxJ,EAAApR,OAAA+T,EAAA,EAAA/T,CAAA8C,KAAA9C,OAAAgU,EAAA,EAAAhU,CAAA4a,GAAA3G,KAAAnR,KAAMwO,KACDuE,MAAQzE,EAAKyJ,qBAFAzJ,gFAMlB,IAAMnQ,EAAe6B,KAAKwO,MAAMrQ,aAC5B6Z,EAAe,CACjB7Z,EAAaM,EAAEE,MACfR,EAAaG,EAAEK,MACfR,EAAaM,EAAEF,KACfJ,EAAaG,EAAEC,MAUjB,OAPIyB,KAAKwO,MAAMnQ,OAASpB,EAAMG,YAAc4C,KAAKwO,MAAMnQ,OAASpB,EAAMI,YACpE2a,EAAe,CACb7Z,EAAaG,EAAEC,KACfJ,EAAaM,EAAEF,OAIZyZ,EAAaC,KAAK,SAAA/Y,GAAE,OAAIA,EAAGV,QAAS,gDAI3C,IAAMQ,EAAQgB,KAAKwO,MAAM9I,SAAW,IAAM,IACpCrD,EAAaI,EAAmBzC,KAAKwO,MAAMnM,WAAYrD,GAC7D,MAAO,CACLsD,MAAOD,EAAWC,MAClBH,SAAUE,EAAWF,SACrBE,WAAYA,EAAWE,KACvB2V,IAAKhW,MACLiW,YAAanY,KAAKoY,8DAKpBpY,KAAKmW,SAAWC,YAAYpW,KAAKqY,KAAKjH,KAAKpR,MAAO,oDAIlDsW,cAActW,KAAKmW,yCAInBnW,KAAKqW,SAASrW,KAAK+X,uDAGX,IAAA7B,EAAAlW,KACFsY,EAAStY,KAAK+S,MAAMmF,IAAIlO,QAAQhK,KAAK+S,MAAM1Q,YAAcrC,KAAK+S,MAAM1Q,WAAarC,KAAK+S,MAAMmF,IAC5FK,EAAOrW,IAAOC,SAASnC,KAAK+S,MAAM1Q,WAAWmW,KAAKF,IAClDG,EAASvW,IAAOC,SAASmW,EAAOE,KAAKxY,KAAK+S,MAAMzQ,QAChDoW,EAAQ1Y,KAAK+S,MAAM5Q,SAEnBwW,IAAYD,EAAME,YAAcL,EAAKK,aAAeF,EAAME,YAAe,KAAK7K,QAAQ,GAE5F,OAAOe,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,qBAChBN,EAAAxQ,EAAAyQ,cAAA,OAAKM,IAAKoH,KAAWrH,MAAM,4BAC3BN,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,4BAA4BlN,IAAO2W,IAAIJ,EAAOK,kBAAkBpC,OAAO,SAAlF,MACA5H,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,4BACTN,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,yBACTN,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,2BACTN,EAAAxQ,EAAAyQ,cAAA,iBAAS/O,KAAKwO,MAAM9O,OAAOjB,EAAEiD,MAA7B,IAAqCP,EAAWnB,KAAKwO,MAAM9O,OAAOjB,EAAEkB,UAAU3C,KAA9E,WACWgD,KAAKwO,MAAM9O,OAAOpB,EAAEoD,MAD/B,IACuCP,EAAWnB,KAAKwO,MAAM9O,OAAOpB,EAAEqB,UAAU3C,MAFlF,kBAGoBkF,IAAO2W,IAAIN,EAAKO,kBAAkBpC,OAAO,SAH7D,MAG0E1W,KAAK+S,MAAM1Q,WAAWqU,OAAO,gBAEvG5H,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,0BACTN,EAAAxQ,EAAAyQ,cAAA,KAAGG,QAAS,kBAAMgH,EAAK1H,MAAMmJ,gBAA7B,YAAqD7I,EAAAxQ,EAAAyQ,cAAA,OAAKM,IAAK0J,UAGnEjK,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,8BACTN,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,kCAAkCgI,MAAO,CAAC4B,MAAK,GAAAhW,OAAK2V,EAAL,SAE5D7J,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,4BACTN,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,iCACTN,EAAAxQ,EAAAyQ,cAAA,kCADF,IACqC/O,KAAK+S,MAAMoF,YAAY3Z,MAE5DsQ,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,mCAAX,kBACkBpP,KAAK+S,MAAMoF,YAAYzZ,iBAI7CoQ,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,0BAA0BlN,IAAO2W,IAAIN,EAAKO,kBAAkBpC,OAAO,SAA9E,cAnF0BnH,eCIjBuD,qBAZS,SAACC,EAAOqC,GAC9B,OAAOlY,OAAA+b,GAAA,EAAA/b,CAAA,CACLmF,WAAY0Q,EAAMhU,KAAKsD,WACvBqD,SAAUqN,EAAMhU,KAAK2G,SACrBhG,OAAQqT,EAAMhU,KAAKW,OACnBvB,aAAc4U,EAAMhU,KAAKZ,aACzBgI,KAAM4M,EAAMhU,KAAKoH,KACjB9H,KAAM0U,EAAMhU,KAAKV,MACd+W,IAML,GAFatC,CAIbgF,6CCkEaoB,kMApEX,IAAMC,EAAmBtT,GAAkBnK,OAAOuH,UAClD,OAAOjD,KAAKwO,MAAMtK,QAAQ5F,EAAEsG,UAAU+I,SAASwL,EAAiBjV,QAAQ5F,EAAEsG,UAAU,KACpF5E,KAAKwO,MAAMtK,QAAQzF,EAAEmG,UAAU+I,SAASwL,EAAiBjV,QAAQzF,EAAEmG,UAAU,+CAI7E,OAAO5E,KAAKwO,MAAMtK,QAAQ5F,EAAEyR,WAAa/P,KAAKwO,MAAMtK,QAAQzF,EAAEsR,+DAI9D,OAAO/P,KAAKwO,MAAM7J,aAAa3E,KAAKwO,MAAM9O,OAAOpB,EAAEqB,UAAU8V,OAC3DzV,KAAKwO,MAAM7J,aAAa3E,KAAKwO,MAAM9O,OAAOjB,EAAEkB,UAAU8V,oDAIxD,OAAOzV,KAAKwO,MAAM3H,YAAc7G,KAAKwO,MAAMrQ,aAAaM,EAAEF,KAAKG,cAAgB,wCAI/E,OAAmC,IAA5BsB,KAAKoZ,YAAYvV,2CAIxB,IAAMwV,EAAS,GAaf,OAZKrZ,KAAKsZ,oBACRD,EAAOjQ,KAAK,6BAEVpJ,KAAKwO,MAAM9I,WAAa1F,KAAKuZ,gBAC/BF,EAAOjQ,KAAK,sEAETpJ,KAAKwO,MAAM9I,UAAa1F,KAAKwZ,8BAChCH,EAAOjQ,KAAK,mCAEVpJ,KAAKwO,MAAM9I,WAAa1F,KAAKyZ,uBAC/BJ,EAAOjQ,KAAK,mCAEPiQ,mCAGC,IAAA/K,EAAAtO,KACR,OAAO8O,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,kBACpBK,EAAAxQ,EAAAyQ,cAAC2K,GAAD,CACExG,aAAclT,KAAKwO,MAAM9O,OAAOpB,EAAEqB,SAClCwT,aAAcnT,KAAKwO,MAAM9O,OAAOjB,EAAEkB,SAClCyB,KAAMuY,KACNtG,YAAa,kBAAM/E,EAAKE,MAAMvE,iBAChC6E,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,sBACTN,EAAAxQ,EAAAyQ,cAAC6K,GAAD,OAEF9K,EAAAxQ,EAAAyQ,cAAC8D,GAAD,MACA/D,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,yBACPpP,KAAKwO,MAAM9I,SACToJ,EAAAxQ,EAAAyQ,cAAA,QAAMK,MAAM,4BAA2BN,EAAAxQ,EAAAyQ,cAAA,OAAKM,IAAKwK,QACjD/K,EAAAxQ,EAAAyQ,cAAA,MAAIK,MAAM,oCAAV,yBACFpP,KAAKwO,MAAM9I,UAAYoJ,EAAAxQ,EAAAyQ,cAAC+K,GAAD,MACvB9Z,KAAKwO,MAAM9I,SACToJ,EAAAxQ,EAAAyQ,cAACgL,GAAD,MACAjL,EAAAxQ,EAAAyQ,cAACiL,GAAD,OACFha,KAAKwO,MAAM9I,UAAYoJ,EAAAxQ,EAAAyQ,cAACiB,GAAD,CAAQpB,MAAI,EAACF,SAAO,EAACO,UAAWjP,KAAKia,cAAe/K,QAASlP,KAAKwO,MAAM1G,cAAxE,QACxB9H,KAAKwO,MAAM9I,UAAYoJ,EAAAxQ,EAAAyQ,cAACiB,GAAD,CAAQpB,MAAI,EAACF,SAAO,EAACO,UAAWjP,KAAKia,cAAe/K,QAASlP,KAAKwO,MAAMpE,aAAxE,iBACxB0E,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,yBACRpP,KAAKoZ,YAAYjM,IAAI,SAAA+M,GAAK,OAAIpL,EAAAxQ,EAAAyQ,cAAA,SAAImL,eA/DhB3K,cCCduD,qBAZS,SAAAC,GACtB,MAAO,CACL1Q,WAAY0Q,EAAMhU,KAAKsD,WACvBqD,SAAUqN,EAAMhU,KAAK2G,SACrBxB,QAAS6O,EAAMhU,KAAKmF,QACpBxE,OAAQqT,EAAMhU,KAAKW,OACnBiF,aAAcoO,EAAMhU,KAAK4F,aACzBxG,aAAc4U,EAAMhU,KAAKZ,aACzB0I,WAAYkM,EAAMhU,KAAK8H,aAMzB,CACEiB,aAAc7H,GAAQ6H,aACtBsC,YAAanK,GAAQmK,YACrBH,YAAahK,GAAQgK,aALV6I,CAOboG,ICXaiB,4LAPX,OAAOrL,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAW,aAAezO,KAAKwO,MAAMC,WAC/CK,EAAAxQ,EAAAyQ,cAAA,MAAIK,MAAM,mBAAmBpP,KAAKwO,MAAM2B,OACvCnQ,KAAKwO,MAAMc,iBAJMC,kCCgBToH,+LATX,OAAO7H,EAAAxQ,EAAAyQ,cAACqL,GAAD,CAAW3L,UAAU,uBAAuB0B,MAAM,kBACvDrB,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,4BAA4BC,IAAKgL,OAC5CvL,EAAAxQ,EAAAyQ,cAAA,KAAGK,MAAM,oCAAT,uDACAN,EAAAxQ,EAAAyQ,cAAA,SAAGD,EAAAxQ,EAAAyQ,cAACiB,GAAD,CAAQpB,MAAI,EAACD,WAAS,EAACO,QAASlP,KAAKwO,MAAMmJ,YAAavW,KAAM2X,MAA9D,sBACHjK,EAAAxQ,EAAAyQ,cAAA,SAAGD,EAAAxQ,EAAAyQ,cAACiB,GAAD,CAAQpB,MAAI,EAACF,SAAO,EAACQ,QAASlP,KAAKwO,MAAM8L,aAAzC,sBAN0B/K,eCWpBoH,+LAVH,IAAArI,EAAAtO,KACR,OAAO8O,EAAAxQ,EAAAyQ,cAACqL,GAAD,CAAW3L,UAAU,iBAAiB0B,MAAM,UACjDrB,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,sBAAsBC,IAAKgL,OACtCvL,EAAAxQ,EAAAyQ,cAAA,KAAGK,MAAM,8BAAT,kEACAN,EAAAxQ,EAAAyQ,cAAA,SAAGD,EAAAxQ,EAAAyQ,cAACiB,GAAD,CAAQpB,MAAI,EAACD,WAAS,EAACO,QAAS,kBAAMZ,EAAKE,MAAMmJ,eAAevW,KAAM2X,MAAtE,gBACHjK,EAAAxQ,EAAAyQ,cAAA,SAAGD,EAAAxQ,EAAAyQ,cAACiB,GAAD,CAAQpB,MAAI,EAACF,SAAO,EAACQ,QAASlP,KAAKwO,MAAM8L,aAAzC,iBANoB/K,oCCQdgL,4LARX,OAAOzL,EAAAxQ,EAAAyQ,cAACqL,GAAD,CAAW3L,UAAU,UAAU0B,MAAM,yBAC1CrB,EAAAxQ,EAAAyQ,cAAA,wGACAD,EAAAxQ,EAAAyQ,cAAA,SAAGD,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,qBAAqBY,IAAKmL,QAC5C1L,EAAAxQ,EAAAyQ,cAACgL,GAAD,CAAmBU,SAAO,YALVlL,cCKPuD,qBARS,SAAAC,GACtB,MAAO,CACLrT,OAAQqT,EAAMhU,KAAKW,OACnB2C,WAAY0Q,EAAMhU,KAAKsD,WACvBqD,SAAUqN,EAAMhU,KAAK2G,WAMvB,GAFaoN,CAGbyH,ICSaG,4LAdX,OAAO5L,EAAAxQ,EAAAyQ,cAACqL,GAAD,CAAW3L,UAAU,iBAAiB0B,MAAM,eACjDrB,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,+BACTN,EAAAxQ,EAAAyQ,cAAA,KAAGK,MAAM,wBAAT,OACMN,EAAAxQ,EAAAyQ,cAAA,cAAS/O,KAAKwO,MAAM9O,OAAOjB,EAAEiD,MAA7B,IAAqCP,EAAWnB,KAAKwO,MAAM9O,OAAOjB,EAAEkB,UAAU3C,MADpF,WAEY8R,EAAAxQ,EAAAyQ,cAAA,cAAS/O,KAAKwO,MAAM9O,OAAOpB,EAAEoD,MAA7B,IAAqCP,EAAWnB,KAAKwO,MAAM9O,OAAOpB,EAAEqB,UAAU3C,OAE1F8R,EAAAxQ,EAAAyQ,cAAA,0BAAiBD,EAAAxQ,EAAAyQ,cAAA,6BAAjB,uEAEFD,EAAAxQ,EAAAyQ,cAACgL,GAAD,CAAmBU,SAAO,IAC1B3L,EAAAxQ,EAAAyQ,cAAA,SAAGD,EAAAxQ,EAAAyQ,cAACiB,GAAD,CAAQpB,MAAI,EAACF,SAAO,EAACQ,QAASlP,KAAKwO,MAAM3D,YAAzC,6BAXoB0E,cCKduD,qBARS,SAAAC,GACtB,MAAO,CACLrT,OAAQqT,EAAMhU,KAAKW,OACnB2C,WAAY0Q,EAAMhU,KAAKsD,WACvBqD,SAAUqN,EAAMhU,KAAK2G,WAMvB,CACEmF,WAAY5K,GAAQ4K,YAHTiI,CAKb4H,ICcaC,4LArBH,IAAArM,EAAAtO,KACR,OAAO8O,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,iBACpBK,EAAAxQ,EAAAyQ,cAAC2K,GAAD,CACExG,aAAclT,KAAKwO,MAAM9O,OAAOpB,EAAEqB,SAClCwT,aAAcnT,KAAKwO,MAAM9O,OAAOjB,EAAEkB,SAClC2T,UAAU,OACVC,UAAU,WACVnS,KAAMiZ,KACNhH,YAAa,kBAAM/E,EAAKE,MAAMvE,iBAChC6E,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,qBACTN,EAAAxQ,EAAAyQ,cAAC6K,GAAD,CAAgB3K,UAAQ,IACxBH,EAAAxQ,EAAAyQ,cAAA,MAAIK,MAAM,uBAAV,kBACAN,EAAAxQ,EAAAyQ,cAAA,QAAMK,MAAM,2BAA0BN,EAAAxQ,EAAAyQ,cAAA,OAAKM,IAAKwK,SAElD/K,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,wBACTN,EAAAxQ,EAAAyQ,cAACiB,GAAD,CAAQpB,MAAI,EAACF,SAAO,EAACQ,QAAS,kBAAMxT,OAAOuH,SAAS+C,QAAQ,OAA5D,+BAhBoBuJ,cCAbuD,qBANS,SAAAC,GACtB,MAAO,CACLrT,OAAQqT,EAAMhU,KAAKW,SAIRoT,CAEb6H,ICSaD,4LAZX,OAAO5L,EAAAxQ,EAAAyQ,cAACqL,GAAD,CAAW3L,UAAU,aAAa0B,MAAM,UAC7CrB,EAAAxQ,EAAAyQ,cAAA,OAAKK,MAAM,2BACTN,EAAAxQ,EAAAyQ,cAAA,KAAGK,MAAM,oBACNpP,KAAKwO,MAAM9O,OAAOpB,EAAEoD,MADvB,IAC+BP,EAAWnB,KAAKwO,MAAM9O,OAAOpB,EAAEqB,UAAU3C,MAExE8R,EAAAxQ,EAAAyQ,cAAA,gDAEFD,EAAAxQ,EAAAyQ,cAAA,SAAGD,EAAAxQ,EAAAyQ,cAACiB,GAAD,CAAQpB,MAAI,EAACF,SAAO,EAACQ,QAASlP,KAAKwO,MAAMrD,YAAzC,uBAToBoE,cCMduD,qBARS,SAAAC,GACtB,MAAO,CACLrT,OAAQqT,EAAMhU,KAAKW,OACnB2C,WAAY0Q,EAAMhU,KAAKsD,WACvBqD,SAAUqN,EAAMhU,KAAK2G,WAMvB,CACEyF,WAAYlL,GAAQkL,YAHT2H,CAKb8H,aCiCaC,4LAzCH,IAAAvM,EAAAtO,KACF8a,EAAatd,EAASud,UAAU,SAAA1c,GAAI,OAAIA,EAAKZ,KAAO6Q,EAAKE,MAAMuE,QAC/DiI,EACJlM,EAAAxQ,EAAAyQ,cAACkM,GAAA,EAAD,CACE1M,QAAS,CACP2M,OAAQ,uCACRC,UAAW,0CACXC,KAAM,qCACNC,KAAM,mCAGZ,OAAOvM,EAAAxQ,EAAAyQ,cAACkM,GAAA,EAAD,CAASD,UAAWA,EAAWF,WAAYA,EAAYQ,kBAAgB,EAAC7M,UAAU,uBACtFjR,EAAS2P,IAAI,SAAC9O,EAAMkd,GACnB,IAAMC,EAAgB,CACpBjN,QAAS,CACP8M,KAAM,2BACNI,KAAM,gCACNP,OAAQ,kCACRC,UAAW,uCAMf,OAHII,EAAQT,IACVU,EAAcpa,KAAO0N,EAAAxQ,EAAAyQ,cAAA,OAAKM,IAAKgL,QAE1BvL,EAAAxQ,EAAAyQ,cAACkM,GAAA,EAAD,CAAMhE,IAAK5Y,EAAKZ,IACrBqR,EAAAxQ,EAAAyQ,cAACkM,GAAA,EAAD,CAAW1M,QAAS,CAClB7Q,MAAO,4BACP4d,iBAAkB,uCAClBJ,OAAQ,mCACRC,UAAW,uCACVO,cAAeF,GAAgBnd,EAAKX,kBA/Bf6R,mCCiDnBoM,uBAvCb,SAAAA,EAAanN,GAAO,IAAAF,EAAA,OAAApR,OAAA8T,EAAA,EAAA9T,CAAA8C,KAAA2b,IAClBrN,EAAApR,OAAA+T,EAAA,EAAA/T,CAAA8C,KAAA9C,OAAAgU,EAAA,EAAAhU,CAAAye,GAAAxK,KAAAnR,KAAMwO,KACDoN,wBAA0BtN,EAAKsN,wBAAwBxK,KAA7BlU,OAAAmU,GAAA,EAAAnU,QAAAmU,GAAA,EAAAnU,CAAAoR,KAC/BA,EAAKuN,kBAAoBvN,EAAKuN,kBAAkBzK,KAAvBlU,OAAAmU,GAAA,EAAAnU,QAAAmU,GAAA,EAAAnU,CAAAoR,KAHPA,mFAMC,IAAA4H,EAAAlW,KACbmG,EAAOnG,KAAKwO,MAAMzP,KAAKoH,KAC7B,OAAO2I,EAAAxQ,EAAAyQ,cAAC+M,GAAD,CAAgB3V,KAAMA,EAAMmU,YAAa,kBAAMpE,EAAK1H,MAAMuN,QAAQ3S,KAAK8M,EAAK1H,MAAMzP,KAAK2G,SAAW,WAAa,0EAG7F,IAAAsW,EAAAhc,KACnBmG,EAAO/C,GAAapD,KAAKwO,MAAMzP,MAAM,GAC3C,OAAO+P,EAAAxQ,EAAAyQ,cAACkN,GAAD,CAAsB9V,KAAMA,EAAMmU,YAAa,WAAQ0B,EAAKxN,MAAMjE,8DAIzE,OAAOuE,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,iBACpBK,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,sBACfK,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,wBACbK,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,qBAAqBY,IAAKmL,OACzC1L,EAAAxQ,EAAAyQ,cAACmN,GAAD,CAAqBnJ,MAAO/S,KAAKwO,MAAMzP,KAAKV,QAE9CyQ,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,sBACbK,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,uBACfK,EAAAxQ,EAAAyQ,cAAA,OAAKN,UAAU,yBACbK,EAAAxQ,EAAAyQ,cAACoN,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpD,KACjCpK,EAAAxQ,EAAAyQ,cAACoN,GAAA,EAAD,CAAOE,KAAK,cAAcE,OAAQvc,KAAK6b,oBACvC/M,EAAAxQ,EAAAyQ,cAACoN,GAAA,EAAD,CAAOE,KAAK,oBAAoBE,OAAQvc,KAAK4b,0BAC7C9M,EAAAxQ,EAAAyQ,cAACoN,GAAA,EAAD,CAAOE,KAAK,WAAWC,UAAW/B,KAClCzL,EAAAxQ,EAAAyQ,cAACoN,GAAA,EAAD,CAAOE,KAAK,UAAUC,UAAW5B,KACjC5L,EAAAxQ,EAAAyQ,cAACoN,GAAA,EAAD,CAAOE,KAAK,aAAaC,UAAW3B,KACpC7L,EAAAxQ,EAAAyQ,cAACoN,GAAA,EAAD,CAAOE,KAAK,UAAUC,UAAW1B,eAjCfrL,cCRbiN,gBAAW1J,kBAJF,SAAAC,GAAK,MAAK,CAChChU,KAAMgU,EAAMhU,OAKZ,CACEwL,wBAAyBtK,GAAQsK,wBACjC1B,iBAAkB5I,GAAQ4I,kBAJJiK,CAMxB6I,yBCRF,SAASc,GAAoBC,EAAYC,EAAcC,GACrD,OAAO,WAAkC,IAAjC7J,EAAiCnS,UAAAiD,OAAA,QAAAC,IAAAlD,UAAA,GAAAA,UAAA,GAAzB+b,EAAcE,EAAWjc,UAAAiD,OAAA,EAAAjD,UAAA,QAAAkD,EACjCgZ,EAAUJ,EAAWG,EAAO/c,MAClC,OAAIgd,EACKA,EAAQ/J,EAAO8J,GAEfD,EAAmBA,EAAiB7J,EAAO8J,GAAU9J,GCqBlE,OAOerT,GAFA+c,IALDM,GAAA,GAAA7f,OAAAgJ,EAAA,EAAAhJ,CAAA6f,GACXC,GAAU3W,aAhBb,SAAsB0M,EAAO8J,GAC3B,IAAMtI,IAAYtO,WAAW8M,EAAMtU,EAAEiD,OAASuE,WAAW8M,EAAMzU,EAAEoD,QAAQqM,QAAQ,GACjF,OAAOkP,KAAOlK,EAAO,CACnBzU,EAAG,CAAE4e,KAAMnK,EAAMtU,GACjBA,EAAG,CAAEye,KAAMnK,EAAMzU,GACjB0F,KAAM,CAAEkZ,KAAM,CAAExb,MAAO6S,EAAQF,iBAUrBnX,OAAAgJ,EAAA,EAAAhJ,CAAA6f,GAEXI,GAAW1J,cARd,SAAuBV,EAAO8J,GAC5B,OAAOI,KAAOlK,EAAD7V,OAAAgJ,EAAA,EAAAhJ,CAAA,GACV2f,EAAO7d,MAAQ,CAAE0C,MAAO,CAAEwb,KAAML,EAAOlJ,eAI9BoJ,IA7BO,CACnBze,EAAG,CACDqB,SAAU,MACV+B,MAAO,MAETjD,EAAG,CACDkB,SAAU,MACV+B,MAAO,MAETsC,KAAM,CACJtC,MAAO,QCuDX,IAUewC,GAFCuY,IARFW,GAAA,GAAAlgB,OAAAgJ,EAAA,EAAAhJ,CAAAkgB,GACXJ,GAAU3W,aA/Cb,SAAsB0M,EAAO8J,GAC3B,OAAOI,KAAOlK,EAAO,CACnBzU,EAAG,CAAE4e,KAAMnK,EAAMtU,GACjBA,EAAG,CAAEye,KAAMnK,EAAMzU,OA2CPpB,OAAAgJ,EAAA,EAAAhJ,CAAAkgB,GAEXC,GAAY3R,sBAzCf,SAA8BqH,EAAO8J,GACnC,OAAOI,KAAOlK,EAAD7V,OAAAgJ,EAAA,EAAAhJ,CAAA,GACV2f,EAAO7d,MAAQ,CACdyT,YAAa,CAAEyK,MAAOnK,EAAM8J,EAAO7d,OAAOyT,aAC1CG,SAAU,CAAEsK,KAAML,EAAO1O,aAmCjBjR,OAAAgJ,EAAA,EAAAhJ,CAAAkgB,GAGXC,GAAY1R,cAjCf,SAAuBoH,EAAO8J,GAC5B,OAAOI,KAAOlK,EAAD7V,OAAAgJ,EAAA,EAAAhJ,CAAA,GACV2f,EAAO7d,MAAQ,CACd0T,OAAQ,CAAEwK,MAAM,GAChBpd,KAAM,CAAEod,KAAML,EAAO9Q,aA0Bb7O,OAAAgJ,EAAA,EAAAhJ,CAAAkgB,GAIXC,GAAYzR,eAzBf,SAAwBmH,EAAO8J,GAC7B,OAAOI,KAAOlK,EAAD7V,OAAAgJ,EAAA,EAAAhJ,CAAA,GACV2f,EAAO7d,MAAQ,CACd4F,UAAW,CAAEsY,KAAML,EAAOjY,WAC1BmL,UAAW,CAAEmN,MAAM,GACnBjR,QAAS,CAAEiR,KAAML,EAAO5Q,cAgBhB/O,OAAAgJ,EAAA,EAAAhJ,CAAAkgB,GAKXC,GAAYxR,kBAhBf,SAA2BkH,EAAO8J,GAChC,OAAOI,KAAOlK,EAAD7V,OAAAgJ,EAAA,EAAAhJ,CAAA,GACV2f,EAAO7d,MAAQ,CACd4F,UAAW,CAAEsY,KAAM,IACnBnN,UAAW,CAAEmN,MAAM,GACnBxK,OAAQ,CAAEwK,MAAM,GAChBpd,KAAM,CAAEod,KAAM,SAKNE,IAjEO,CACnB9e,EAAG,CACDsG,UAAW,GACXqH,QAAS,KACTwG,aAAa,EACb1C,WAAW,EACX2C,QAAQ,EACR5S,KAAM,IAERrB,EAAG,CACDmG,UAAW,GACXqH,QAAS,KACTwG,aAAa,EACb1C,WAAW,EACX2C,QAAQ,EACR5S,KAAM,MCLV,IAMe6E,GAFM8X,GAJPvf,OAAAgJ,EAAA,EAAAhJ,CAAA,GACXc,GAAMuX,6BAPT,SAAoCxC,EAAO8J,GACzC,OAAOI,KAAOlK,EAAD7V,OAAAgJ,EAAA,EAAAhJ,CAAA,GACV2f,EAAOld,SAAW,CAAE4B,QAAS,CAAE2b,KAAML,EAAOlJ,UAAY8B,MAAO,CAAEyH,KAAML,EAAOpH,YAP9D,CACnBjb,IAAK,CAAC+G,QAAS,GAAIkU,OAAO,GAC1B7a,IAAK,CAAC2G,QAAS,GAAIkU,OAAO,KCe5B,OAMe9Q,GAFM8X,GAJPvf,OAAAgJ,EAAA,EAAAhJ,CAAA,GACXc,EAAMC,gBAPT,SAAyB8U,EAAO8J,GAC9B,OAAOI,KAAOlK,EAAD7V,OAAAgJ,EAAA,EAAAhJ,CAAA,GACV2f,EAAO7d,MADG9B,OAAAgJ,EAAA,EAAAhJ,CAAA,GACQ2f,EAAO5d,KAAO,CAAEie,KAAKhgB,OAAA+b,GAAA,EAAA/b,CAAA,CAAEwB,cAAe,GAAMme,EAAO3d,UAbrD,CACnBZ,EAAG,CACDC,KAAM,GACNI,MAAO,IAETF,EAAG,CACDF,KAAM,GACNI,MAAO,MCSX,IAOe6G,GAFMiX,IALPa,GAAA,GAAApgB,OAAAgJ,EAAA,EAAAhJ,CAAAogB,GACXtf,EAAM6C,WAdT,SAAoBkS,EAAO8J,GACzB,OAAOI,KAAOlK,EAAO,CACnB/R,OAAQ,CAAEkc,KAAML,EAAO7b,QACvBE,WAAY,CAAEgc,KAAMxV,SAAOC,OAAOkV,EAAO7b,aAU/B9D,OAAAgJ,EAAA,EAAAhJ,CAAAogB,GAEXtf,EAAM8C,gBART,SAAwBiS,EAAO8J,GAC7B,OAAOI,KAAOlK,EAAO,CACnB7R,WAAY,CAAEgc,KAAML,EAAO3b,gBAIjBoc,IAfO,ICMNC,eAAgB,CAC7B7d,UACAwE,WACAS,gBACAxG,gBACAqH,gBACAnH,KAAM,WAAsC,IAArC0U,EAAqCnS,UAAAiD,OAAA,QAAAC,IAAAlD,UAAA,GAAAA,UAAA,GAA7B3D,EAAMG,WAAYyf,EAAWjc,UAAAiD,OAAA,EAAAjD,UAAA,QAAAkD,EAC1C,OAAO+Y,EAAO/c,OAAS9B,GAAMsI,SAAWuW,EAAOxe,KAAO0U,GAExD1Q,WAAY,WAA0B,IAAzB0Q,EAAyBnS,UAAAiD,OAAA,QAAAC,IAAAlD,UAAA,GAAAA,UAAA,GAAjB,KAAMic,EAAWjc,UAAAiD,OAAA,EAAAjD,UAAA,QAAAkD,EACpC,OAAO+Y,EAAO/c,OAAS9B,GAAMuI,eAAiBsW,EAAOxa,WAAa0Q,GAEpE5M,KAAM,WAA0B,IAAzB4M,EAAyBnS,UAAAiD,OAAA,QAAAC,IAAAlD,UAAA,GAAAA,UAAA,GAAjB,KAAMic,EAAWjc,UAAAiD,OAAA,EAAAjD,UAAA,QAAAkD,EAC9B,OAAO+Y,EAAO/c,OAAS9B,GAAMwI,SAAWqW,EAAO1W,KAAO4M,GAExDlM,WAAY,WAA2B,IAA1BkM,EAA0BnS,UAAAiD,OAAA,QAAAC,IAAAlD,UAAA,IAAAA,UAAA,GAAXic,EAAWjc,UAAAiD,OAAA,EAAAjD,UAAA,QAAAkD,EACrC,OAAO+Y,EAAO/c,OAAS9B,GAAMyI,gBAAkBoW,EAAOhW,WAAakM,GAErErN,SAAU,kBAAA9E,UAAAiD,OAAA,QAAAC,IAAAlD,UAAA,IAAAA,UAAA,MC1BG2c,eAAgB,CAC7Bxe,UCYIgd,WAAUyB,YAAqB,CAACC,SAAU/hB,OAAOuH,SAASya,YAEhEC,SAAOC,WAAW,QAAS,GAE3B,IAAMC,GAAkB,CACtB9e,KAAM8G,GAAkBnK,OAAOuH,WAG3B6a,GAAQC,YACZC,wBAAcjC,GAAdiC,CAAuBC,IACvBJ,GACAK,YAAgBC,IAAOC,2BAAiBrC,MAGtC8B,GAAgB9e,OACd8e,GAAgB9e,KAAKZ,aAAaG,EAAEC,KAAKC,MAC3Csf,GAAM1f,SAASQ,GAAYoJ,mBAGzB6V,GAAgB9e,KAAK2G,WAEvBoY,GAAM1f,SAAS2J,EAAmB7H,eAChC,IAAK,OAAQ2d,GAAgB9e,KAAKZ,aAAaM,EAAEF,OAEnDuf,GAAM1f,SAASQ,GAAYyJ,qCChCXrL,GACdqhB,GD+CSC,oLAVX,OACExP,EAAAxQ,EAAAyQ,cAACwP,EAAA,SAAD,CAAUT,MAAOA,IACfhP,EAAAxQ,EAAAyQ,cAACyP,EAAA,gBAAD,CAAiBzC,QAASA,IACxBjN,EAAAxQ,EAAAyQ,cAAC0P,GAAD,eALQlP,aEhCH+O,oLARX,OACExP,EAAAxQ,EAAAyQ,cAAA,MAAIqI,MAAO,CAACsH,UAAW,OAAQC,UAAW,WAA1C,mFACkF7P,EAAAxQ,EAAAyQ,cAAA,KAAG3I,KAAK,wBAAR,uBAJtEmJ,aCSZqP,GAAcC,QACW,cAA7BnjB,OAAOuH,SAAS6b,UAEe,UAA7BpjB,OAAOuH,SAAS6b,UAEhBpjB,OAAOuH,SAAS6b,SAASC,MACvB,2DAsCN,SAASC,GAAiBC,GACxBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBzM,QACfmM,UAAUC,cAAcQ,WAK1B3kB,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrB2kB,MAAM,SAAA1F,GACLlf,QAAQkf,MAAM,4CAA6CA,KFxE7Cld,GAOVnB,EAAOxB,cANXgkB,GAAIlH,SAASpI,cAAc,WAC7BjP,KAAO,kBACTue,GAAEwB,UAAY7iB,GACdma,SAAS2I,qBAAqB,QAAQ,GAAGxI,YAAY+G,IAKnC,qBAATviB,KACTikB,IAASxD,OAAOzN,EAAAxQ,EAAAyQ,cAACiR,GAAD,MAAc7I,SAAS8I,eAAe,SAEtDF,IAASxD,OAAOzN,EAAAxQ,EAAAyQ,cAACmR,GAAD,MAAS/I,SAAS8I,eAAe,SECpC,WACb,GAA6C,kBAAmBf,UAAW,CAGzE,GADkB,IAAIiB,IAAIxkB,IAAwBD,OAAOuH,UAC3Cmd,SAAW1kB,OAAOuH,SAASmd,OAIvC,OAGF1kB,OAAO2kB,iBAAiB,OAAQ,WAC9B,IAAMpB,EAAK,GAAAjc,OAAMrH,IAAN,sBAEPijB,IAiDV,SAAkCK,GAEhCqB,MAAMrB,GACHI,KAAK,SAAAkB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CzB,UAAUC,cAAcyB,MAAMvB,KAAK,SAAAC,GACjCA,EAAauB,aAAaxB,KAAK,WAC7B3jB,OAAOuH,SAAS6d,aAKpB9B,GAAgBC,KAGnBW,MAAM,WACL5kB,QAAQC,IACN,mEArEA8lB,CAAwB9B,GAIxBC,UAAUC,cAAcyB,MAAMvB,KAAK,WACjCrkB,QAAQC,IACN,+GAMJ+jB,GAAgBC,MF1BxB+B,uBGvBAnnB,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.ef7f6131.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/btc.e73cb1b2.svg\";","module.exports = __webpack_public_path__ + \"static/media/eth.18708d3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/metamask.dcf1fb0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/ledger.4cfa0cb4.svg\";","module.exports = __webpack_public_path__ + \"static/media/ledger_purple.db956da8.svg\";","module.exports = __webpack_public_path__ + \"static/media/wallet-icon.1755dc6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/assets-bg.df3317e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/tick.91b58e9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.9c76fef5.svg\";","module.exports = __webpack_public_path__ + \"static/media/lock.6b34fdcb.svg\";","module.exports = __webpack_public_path__ + \"static/media/switch.31f6da16.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.f8b51b82.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-text.3c2c3338.png\";","module.exports = __webpack_public_path__ + \"static/media/completed.c5ff6920.svg\";","import _ from 'lodash'\n\nimport defaultConfig from './default'\nimport config from './config'\n\nconst finalConfig = _.clone(defaultConfig)\n\n_.merge(finalConfig, config)\n\nconsole.log(finalConfig)\n\nexport default finalConfig\n","export default {\n  basePath: '/',\n  injectScript: '',\n  debug: false\n}\n","export default {\n  eth: {\n    rpc: {\n      url: 'https://rinkeby.infura.io/pjvC14Kn4cv47X3U8qLq',\n    },\n    network: 4\n  },\n  btc: {\n    rpc: {\n      username: 'liquality',\n      password: 'liquality123',\n      url: 'https://bitcoin.liquality.io'\n    },\n    feeNumberOfBlocks: 2,\n    network: 'bitcoin'\n  },\n  debug: true,\n  basePath: '/swap-challenge/',\n  injectScript: `\n  // GA\n  (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\n  new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\n  j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n  'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n  })(window,document,'script','dataLayer','GTM-52D86Z5');\n\n  // Router GA Pageview\n  const sendPageView = (path) => {\n    window.ga('set', 'page', path);\n    window.ga('send', 'pageview');\n  }\n\n  var pushState = history.pushState;\n  history.pushState = function () {\n    pushState.apply(history, arguments);\n    sendPageView(arguments[2])\n  };\n\n  window.onpopstate = function (e) {\n    sendPageView(document.location.pathname + document.location.search)\n  };\n\n  // HOTJAR\n  (function(h,o,t,j,a,r){\n    h.hj=h.hj||function(){(h.hj.q=h.hj.q||[]).push(arguments)};\n    h._hjSettings={hjid:1102216,hjsv:6};\n    a=o.getElementsByTagName('head')[0];\n    r=o.createElement('script');r.async=1;\n    r.src=t+h._hjSettings.hjid+j+h._hjSettings.hjsv;\n    a.appendChild(r);\n  })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');\n\n  // CRISP\n  window.$crisp=[];\n  window.CRISP_WEBSITE_ID=\"aebdc8b6-79e1-4afd-83d8-70a9143bd88b\";\n  (function(){d=document;s=d.createElement(\"script\");s.src=\"https://client.crisp.chat/l.js\";s.async=1;d.getElementsByTagName(\"head\")[0].appendChild(s);})();\n  `\n}\n","/* global web3, localStorage */\n\nimport { Client, providers, networks } from '@liquality/chainabstractionlayer/dist/index.umd.js'\nimport config from '../config'\n\nconst ethClient = new Client()\nethClient.addProvider(new providers.ethereum.EthereumRPCProvider(\n  localStorage.ethRpc || window.ethRpc || process.env.REACT_APP_ETH_RPC || config.eth.rpc.url\n))\nif (typeof web3 !== 'undefined') {\n  ethClient.addProvider(new providers.ethereum.EthereumMetaMaskProvider(web3.currentProvider, config.eth.network))\n}\nethClient.addProvider(new providers.ethereum.EthereumSwapProvider())\n\nconst btcClient = new Client()\nbtcClient.addProvider(new providers.bitcoin.BitcoreRPCProvider(\n  localStorage.btcRpc || window.btcRpc || process.env.REACT_APP_BTC_RPC || config.btc.rpc.url,\n  localStorage.btcRpcUser || window.btcRpcUser || process.env.REACT_APP_BTC_RPC_USER || config.btc.rpc.username,\n  localStorage.btcRpcPass || window.btcRpcPass || process.env.REACT_APP_BTC_RPC_PASS || config.btc.rpc.password,\n  config.feeNumberOfBlocks\n))\nbtcClient.addProvider(new providers.bitcoin.BitcoinLedgerProvider({network: networks[config.btc.network]}))\nbtcClient.addProvider(new providers.bitcoin.BitcoinSwapProvider({network: networks[config.btc.network]}))\n\nconst clients = {\n  eth: ethClient,\n  btc: btcClient\n}\n\nfunction getClient (code) {\n  return clients[code]\n}\n\nexport { getClient, ethClient, btcClient }\n","const steps = Object.freeze({\n  INITIATION: 'initiation',\n  AGREEMENT: 'agreement',\n  CLAIMING: 'claiming',\n  SETTLED: 'settled'\n})\n\nconst stepData = [\n  { id: steps.INITIATION, label: 'Swap initiation' },\n  { id: steps.AGREEMENT, label: 'Counterparties agree' },\n  { id: steps.CLAIMING, label: 'Claiming' },\n  { id: steps.SETTLED, label: 'Settlement' }\n]\n\nexport { steps, stepData }\n","const sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nexport { sleep }\n","import { actions as swapActions } from './swap'\nimport { steps } from '../components/SwapProgressStepper/steps'\nimport { getClient } from '../services/chainClient'\nimport { sleep } from '../utils/async'\n\nconst types = {\n  SET_TRANSACTION: 'SET_TRANSACTION'\n}\n\nfunction setStep (transactions, dispatch) {\n  let step = steps.INITIATION\n  if (transactions.a.fund.hash) {\n    step = steps.AGREEMENT\n    if (transactions.b.fund.hash) {\n      if (transactions.a.fund.confirmations > 0 && transactions.b.fund.confirmations > 0) {\n        step = steps.CLAIMING\n        if (transactions.a.claim.hash) {\n          step = steps.SETTLED\n        }\n      }\n    }\n  }\n  dispatch(swapActions.setStep(step))\n}\n\nasync function monitorTransaction (swap, party, kind, tx, dispatch) {\n  while (true) {\n    let client\n    if (kind === 'claim') {\n      client = getClient(swap.assets[party === 'a' ? 'b' : 'a'].currency)\n    } else if (kind === 'fund') {\n      client = getClient(swap.assets[party].currency)\n    }\n    const updatedTransaction = await client.getTransactionByHash(tx.hash)\n    dispatch({ type: types.SET_TRANSACTION, party, kind, tx: updatedTransaction })\n    await sleep(5000)\n  }\n}\n\nfunction setTransaction (party, kind, tx) {\n  return async (dispatch, getState) => {\n    dispatch({ type: types.SET_TRANSACTION, party, kind, tx })\n    const swap = getState().swap\n    setStep(swap.transactions, dispatch)\n    await monitorTransaction(swap, party, kind, tx, dispatch)\n  }\n}\n\nconst actions = {\n  setTransaction\n}\n\nexport { types, actions }\n","const types = {\n  SET_SECRET: 'SET_SECRET',\n  SET_SECRET_HASH: 'SET_SECRET_HASH'\n}\n\nfunction setSecret (secret) {\n  return { type: types.SET_SECRET, secret }\n}\n\nfunction setSecretHash (secretHash) {\n  return { type: types.SET_SECRET_HASH, secretHash }\n}\n\nconst actions = {\n  setSecret,\n  setSecretHash\n}\n\nexport { types, actions }\n","import btcIcon from '../icons/btc.svg'\nimport ethIcon from '../icons/eth.svg'\nimport BigNumber from 'bignumber.js'\n\nconst SAT_TO_BTC = 100000000\nconst WEI_TO_ETH = 1000000000000000000\n\nconst currencies = {\n  'btc': {\n    icon: btcIcon,\n    code: 'BTC',\n    // TODO: include network types in validation\n    isValidAddress: address => /^[13mn][a-km-zA-HJ-NP-Z1-9]{25,34}$/.test(address),\n    unitToCurrency (value) {\n      return BigNumber(value).dividedBy(SAT_TO_BTC).toNumber()\n    },\n    currencyToUnit (value) {\n      return BigNumber(value).times(SAT_TO_BTC).toNumber()\n    }\n  },\n  'eth': {\n    icon: ethIcon,\n    code: 'ETH',\n    isValidAddress: address => /^[0-9a-fA-F]{40}$/.test(address),\n    unitToCurrency (value) {\n      return BigNumber(value).dividedBy(WEI_TO_ETH).toNumber()\n    },\n    currencyToUnit (value) {\n      return BigNumber(value).times(WEI_TO_ETH).toNumber()\n    }\n  }\n}\n\nexport default currencies\n","import moment from 'moment'\n\nconst expirationDurations = {\n  a: moment.duration(12, 'h'),\n  b: moment.duration(6, 'h')\n}\n\nfunction getFundExpiration (expiration, party) {\n  let start, duration, time\n\n  if (party === 'b') {\n    time = moment(expiration).subtract(expirationDurations.b)\n    duration = expirationDurations.b\n    start = moment(expiration).subtract(expirationDurations.a)\n  } else {\n    time = expiration\n    duration = expirationDurations.a\n    start = moment(expiration).subtract(expirationDurations.a)\n  }\n\n  return {\n    start,\n    duration,\n    time\n  }\n}\n\nfunction getClaimExpiration (expiration, party) {\n  return party === 'a'\n    ? getFundExpiration(expiration, 'b')\n    : getFundExpiration(expiration, 'a')\n}\n\nfunction generateExpiration () {\n  return moment().add(expirationDurations.a)\n}\n\nexport { expirationDurations, getFundExpiration, getClaimExpiration, generateExpiration }\n","import queryString from 'qs'\nimport moment from 'moment'\nimport config from '../config'\n\nconst SUB_PATH = window.appSubPath || process.env.REACT_APP_BASE_PATH || config.basePath\nconst APP_BASE_URL = `${window.location.protocol}//${window.location.host}${SUB_PATH}`\n\nfunction generateLink (swap, counterparty = false) {\n  let assetA, assetB, assetRate, walletA, walletB, transactionsA, transactionsB\n\n  if (counterparty) { // Switch around sides as this will be the state of the counter party\n    ({ a: assetB, b: assetA, rate: assetRate } = swap.assets)\n    ;({ a: walletB, b: walletA } = swap.wallets)\n    ;({ a: transactionsB, b: transactionsA } = swap.transactions)\n  } else {\n    ({ a: assetA, b: assetB, rate: assetRate } = swap.assets)\n    ;({ a: walletA, b: walletB } = swap.wallets)\n    ;({ a: transactionsA, b: transactionsB } = swap.transactions)\n  }\n\n  const urlParams = {\n    ccy1: assetA.currency,\n    ccy1v: assetA.value,\n    ccy1Addr: counterparty ? swap.counterParty[assetA.currency].address : walletA.addresses[0],\n    ccy1CounterPartyAddr: counterparty ? walletA.addresses[0] : swap.counterParty[assetA.currency].address,\n\n    ccy2: assetB.currency,\n    ccy2v: assetB.value,\n    ccy2Addr: counterparty ? swap.counterParty[assetB.currency].address : walletB.addresses[0],\n    ccy2CounterPartyAddr: counterparty ? walletB.addresses[0] : swap.counterParty[assetB.currency].address,\n\n    ccy3v: assetRate.value,\n\n    aFundHash: transactionsA.fund.hash,\n    bFundHash: transactionsB.fund.hash,\n\n    aFundBlock: transactionsA.fund.block,\n    bFundBlock: transactionsB.fund.block,\n\n    secretHash: swap.secretParams.secretHash,\n\n    expiration: swap.expiration.unix(),\n\n    isPartyB: counterparty === true\n  }\n\n  return `${APP_BASE_URL}#${queryString.stringify(urlParams)}`\n}\n\nfunction generateSwapState (location) {\n  if (!location.hash) return undefined // no state\n  const urlParams = queryString.parse(location.hash.replace('#', ''))\n\n  return {\n    assets: {\n      a: { currency: urlParams.ccy1, value: parseFloat(urlParams.ccy1v) },\n      b: { currency: urlParams.ccy2, value: parseFloat(urlParams.ccy2v) },\n      rate: { value: parseFloat(urlParams.ccy3v) }\n    },\n    wallets: {\n      a: { addresses: [urlParams.ccy1Addr] },\n      b: { addresses: [urlParams.ccy2Addr] }\n    },\n    counterParty: {\n      [urlParams.ccy1]: { address: urlParams.ccy1CounterPartyAddr },\n      [urlParams.ccy2]: { address: urlParams.ccy2CounterPartyAddr }\n    },\n    transactions: {\n      a: { fund: { hash: urlParams.aFundHash, block: urlParams.aFundBlock }, claim: {} },\n      b: { fund: { hash: urlParams.bFundHash, block: urlParams.bFundBlock }, claim: {} }\n    },\n    secretParams: {\n      secretHash: urlParams.secretHash\n    },\n    expiration: moment.unix(urlParams.expiration),\n    isPartyB: urlParams.isPartyB === 'true',\n    link: location.href\n  }\n}\n\nexport { generateLink, generateSwapState }\n","/* global alert */\n\nimport { push } from 'connected-react-router'\nimport config from '../config'\nimport { getClient } from '../services/chainClient'\nimport { crypto } from '@liquality/chainabstractionlayer/dist/index.umd.js'\nimport { actions as transactionActions } from './transactions'\nimport { actions as secretActions } from './secretparams'\nimport currencies from '../utils/currencies'\nimport { sleep } from '../utils/async'\nimport { getFundExpiration, getClaimExpiration, generateExpiration } from '../utils/expiration'\nimport moment from 'moment'\nimport { generateLink } from '../utils/app-links'\n\nconst types = {\n  SWITCH_SIDES: 'SWITCH_SIDES',\n  SET_STEP: 'SET_STEP',\n  SET_EXPIRATION: 'SET_EXPIRATION',\n  SET_LINK: 'SET_LINK',\n  SET_IS_VERIFIED: 'SET_IS_VERIFIED'\n}\n\nfunction switchSides () {\n  return { type: types.SWITCH_SIDES }\n}\n\nfunction setStep (step) {\n  return { type: types.SET_STEP, step }\n}\n\nfunction setExpiration (expiration) {\n  return { type: types.SET_EXPIRATION, expiration }\n}\n\nfunction setLink (link) {\n  return { type: types.SET_LINK, link }\n}\n\nfunction setIsVerified (isVerified) {\n  return { type: types.SET_IS_VERIFIED, isVerified }\n}\n\nfunction alphaWarning () {\n  alert('Warning: On this alpha version, do not close your browser during the swap. The swap state will be lost.')\n}\n\nasync function lockFunds (dispatch, getState) {\n  const {\n    assets,\n    wallets,\n    counterParty,\n    secretParams,\n    expiration,\n    link,\n    isPartyB\n  } = getState().swap\n  const client = getClient(assets.a.currency)\n  let secretHash = secretParams.secretHash\n  if (!secretHash) {\n    const secretMsg = `${assets.a.value}${assets.a.currency}${assets.b.value}${assets.b.currency}${wallets.a.addresses[0]}${counterParty[assets.a.currency].address}${wallets.b.addresses[0]}${counterParty[assets.b.currency].address}`\n    const secret = await client.generateSecret(secretMsg)\n    secretHash = crypto.sha256(secret)\n    dispatch(secretActions.setSecret(secret))\n  }\n\n  let swapExpiration\n  if (isPartyB) {\n    swapExpiration = getFundExpiration(expiration, 'b').time\n  } else {\n    swapExpiration = generateExpiration()\n    dispatch(setExpiration(swapExpiration))\n  }\n\n  const block = await client.getBlockHeight()\n  const valueInUnit = currencies[assets.a.currency].currencyToUnit(assets.a.value)\n  const initiateSwapParams = [\n    valueInUnit,\n    counterParty[assets.a.currency].address,\n    wallets.a.addresses[0],\n    secretHash,\n    swapExpiration.unix()\n  ]\n  if (config.debug) { // TODO: enable debugging universally on all CAL functions (chainClient.js)\n    console.log('Initiating Swap', initiateSwapParams)\n  }\n  const txHash = await client.initiateSwap(...initiateSwapParams)\n  dispatch(transactionActions.setTransaction('a', 'fund', { hash: txHash, block }))\n  dispatch(waitForExpiration)\n  if (!link) {\n    dispatch(setLink(generateLink(getState().swap)))\n  }\n}\n\nfunction initiateSwap () {\n  return async (dispatch, getState) => {\n    await lockFunds(dispatch, getState)\n    dispatch(setIsVerified(true))\n    dispatch(push('/counterPartyLink'))\n  }\n}\n\nfunction confirmSwap () {\n  return async (dispatch, getState) => {\n    await lockFunds(dispatch, getState)\n    dispatch(waitForSwapClaim())\n    dispatch(push('/waiting'))\n    alphaWarning()\n  }\n}\n\nasync function verifyInitiateSwapTransaction (dispatch, getState) {\n  const {\n    assets: { b: { currency, value } },\n    wallets: { b: { addresses } },\n    counterParty,\n    secretParams,\n    transactions,\n    expiration\n  } = getState().swap\n  const client = getClient(currency)\n  const valueInUnit = currencies[currency].currencyToUnit(value)\n  while (true) {\n    const swapVerified = await client.verifyInitiateSwapTransaction(transactions.b.fund.hash, valueInUnit, addresses[0], counterParty[currency].address, secretParams.secretHash, expiration.unix())\n    if (swapVerified) {\n      dispatch(setIsVerified(true))\n      break\n    }\n    await sleep(5000)\n  }\n}\n\nasync function findInitiateSwapTransaction (dispatch, getState) {\n  const {\n    assets: { b: { currency, value } },\n    wallets: { b: { addresses } },\n    counterParty,\n    secretParams,\n    expiration\n  } = getState().swap\n  const client = getClient(currency)\n  const valueInUnit = currencies[currency].currencyToUnit(value)\n  const swapExpiration = getFundExpiration(expiration, 'b').time\n  const initiateTransaction = await client.findInitiateSwapTransaction(valueInUnit, addresses[0], counterParty[currency].address, secretParams.secretHash, swapExpiration.unix())\n  dispatch(transactionActions.setTransaction('b', 'fund', initiateTransaction))\n}\n\nfunction waitForSwapConfirmation () {\n  return async (dispatch, getState) => {\n    dispatch(push('/waiting'))\n    alphaWarning()\n    await findInitiateSwapTransaction(dispatch, getState)\n    dispatch(push('/redeem'))\n  }\n}\n\nfunction waitForSwapClaim () {\n  return async (dispatch, getState) => {\n    const {\n      assets,\n      wallets,\n      transactions,\n      counterParty,\n      secretParams,\n      expiration,\n      isPartyB\n    } = getState().swap\n    const client = getClient(assets.a.currency)\n    const swapExpiration = getFundExpiration(expiration, isPartyB ? 'b' : 'a').time\n    const claimTransaction = await client.findClaimSwapTransaction(transactions.a.fund.hash, counterParty[assets.a.currency].address, wallets.a.addresses[0], secretParams.secretHash, swapExpiration.unix())\n    dispatch(secretActions.setSecret(claimTransaction.secret))\n    dispatch(transactionActions.setTransaction('b', 'claim', claimTransaction))\n    dispatch(push('/redeem'))\n  }\n}\n\nasync function unlockFunds (dispatch, getState) {\n  const {\n    assets,\n    wallets,\n    counterParty,\n    transactions,\n    secretParams,\n    isPartyB,\n    expiration\n  } = getState().swap\n  const client = getClient(assets.b.currency)\n  const block = await client.getBlockHeight()\n  const swapExpiration = getClaimExpiration(expiration, isPartyB ? 'b' : 'a').time\n  const claimSwapParams = [\n    transactions.b.fund.hash,\n    wallets.b.addresses[0],\n    counterParty[assets.b.currency].address,\n    secretParams.secret,\n    swapExpiration.unix()\n  ]\n  if (config.debug) { // TODO: enable debugging universally on all CAL functions (chainClient.js)\n    console.log('Claiming Swap', claimSwapParams)\n  }\n  const txHash = await client.claimSwap(...claimSwapParams)\n  dispatch(transactionActions.setTransaction('a', 'claim', { hash: txHash, block }))\n  dispatch(waitForExpiration)\n}\n\nfunction redeemSwap () {\n  return async (dispatch, getState) => {\n    await unlockFunds(dispatch, getState)\n    dispatch(push('/completed'))\n  }\n}\n\nfunction refundSwap () {\n  return async (dispatch, getState) => {\n    const {\n      assets,\n      wallets,\n      counterParty,\n      transactions,\n      secretParams,\n      isPartyB,\n      expiration\n    } = getState().swap\n\n    const client = getClient(assets.a.currency)\n    const swapExpiration = getFundExpiration(expiration, isPartyB ? 'b' : 'a').time\n    await client.refundSwap(\n      transactions.a.fund.hash,\n      counterParty[assets.a.currency].address,\n      wallets.a.addresses[0],\n      secretParams.secretHash,\n      swapExpiration.unix()\n    )\n  }\n}\n\nasync function waitForExpiration (dispatch, getState) {\n  const {\n    isPartyB,\n    expiration\n  } = getState().swap\n\n  const swapExpiration = getFundExpiration(expiration, isPartyB ? 'b' : 'a').time\n  let swapExpired = false\n  while (true) {\n    swapExpired = moment().isAfter(swapExpiration)\n    if (swapExpired) break\n    await sleep(5000)\n  }\n  dispatch(push('/refund'))\n}\n\nconst actions = {\n  switchSides,\n  setStep,\n  setExpiration,\n  setLink,\n  setIsVerified,\n  initiateSwap,\n  confirmSwap,\n  findInitiateSwapTransaction,\n  verifyInitiateSwapTransaction,\n  waitForSwapConfirmation,\n  waitForSwapClaim,\n  waitForExpiration,\n  redeemSwap,\n  refundSwap\n}\n\nexport { types, actions }\n","import { getClient } from '../services/chainClient'\nimport currencies from '../utils/currencies'\n\nconst types = {\n  TOGGLE_WALLET_CONNECT: 'TOGGLE_WALLET_CONNECT',\n  CHOOSE_WALLET: 'CHOOSE_WALLET',\n  CONNECT_WALLET: 'CONNECT_WALLET',\n  DISCONNECT_WALLET: 'DISCONNECT_WALLET'\n}\n\nfunction waitForWallet (party, currency, wallet) {\n  return async (dispatch, getState) => {\n    const {\n      assets,\n      wallets,\n      isPartyB\n    } = getState().swap\n\n    const currency = assets[party].currency\n    const client = getClient(currency)\n\n    if (currency === 'eth') {\n      window.ethereum.enable()\n    }\n\n    dispatch(chooseWallet(party, wallet))\n    const addressesPerCall = 20\n    const unusedAddress = (await client.getUnusedAddress()).address\n    let unusedAddressReached = false\n    let usedAddresses = []\n    let addressesIndex = 0\n    while (!unusedAddressReached) {\n      let addresses = await client.getAddresses(addressesIndex, addressesPerCall)\n      addresses = addresses.map(addr => addr.address)\n      for (const address of addresses) {\n        if (address === unusedAddress) {\n          unusedAddressReached = true\n          break\n        }\n        usedAddresses.push(address)\n      }\n      addressesIndex += addressesPerCall\n    }\n\n    let allAddresses = [unusedAddress, ...usedAddresses]\n    if (isPartyB) { // Preserve the preset address for party B\n      const expectedAddress = wallets[party].addresses[0]\n      if (allAddresses.includes(expectedAddress)) {\n        allAddresses = [expectedAddress, ...allAddresses.filter(address => address !== expectedAddress)]\n      }\n    }\n\n    const balance = await client.getBalance(allAddresses)\n    const formattedBalance = currencies[currency].unitToCurrency(balance).toFixed(3)\n    dispatch(connectWallet(party, allAddresses, formattedBalance))\n  }\n}\n\nfunction toggleWalletConnect (party, target) {\n  return { type: types.TOGGLE_WALLET_CONNECT, party, target }\n}\n\nfunction chooseWallet (party, wallet) {\n  return { type: types.CHOOSE_WALLET, party, wallet }\n}\n\nfunction connectWallet (party, addresses, balance) {\n  return { type: types.CONNECT_WALLET, party, addresses, balance }\n}\n\nfunction disconnectWallet (party) {\n  return { type: types.DISCONNECT_WALLET, party }\n}\n\nconst actions = {\n  waitForWallet,\n  toggleWalletConnect,\n  chooseWallet,\n  connectWallet,\n  disconnectWallet\n}\n\nexport { types, actions }\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport './Button.css'\n\nclass Button extends Component {\n  render () {\n    const classes = ['Button', 'btn']\n\n    if (this.props.className) {\n      classes.push(this.props.className)\n    }\n\n    if (this.props.primary) {\n      classes.push('btn-primary')\n    } else if (this.props.secondary) {\n      classes.push('btn-secondary')\n    }\n\n    if (this.props.wide) {\n      classes.push('Button_wide')\n    }\n    if (this.props.small) {\n      classes.push('Button_small')\n    }\n\n    return <button className={classes.join(' ')} disabled={this.props.disabled} onClick={e => this.props.onClick(e)}>\n      {this.props.icon && <span class='Button_icon'><img src={this.props.icon} /></span>}\n      {this.props.children}\n    </button>\n  }\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  primary: PropTypes.bool,\n  secondary: PropTypes.bool,\n  wide: PropTypes.bool,\n  small: PropTypes.bool,\n  disabled: PropTypes.bool,\n  icon: PropTypes.any,\n  onClick: PropTypes.func\n}\n\nexport default Button\n","import metamask from '../icons/metamask.svg'\nimport ledger from '../icons/ledger.svg'\nimport ledgerPurple from '../icons/ledger_purple.svg'\n\nconst wallets = {\n  'metamask': {\n    icon: metamask,\n    name: 'MetaMask'\n  },\n  'ledger': {\n    icon: ledger,\n    name: 'Ledger'\n  },\n  'ledger_purple': {\n    icon: ledgerPurple\n  }\n}\n\nexport default wallets\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '../Button/Button'\n\nimport currencies from '../../utils/currencies'\nimport wallets from '../../utils/wallets'\nimport WalletIcon from './wallet-icon.svg'\n\nimport './WalletDisplay.css'\n\nconst WalletBalance = (props) => (\n  <div class='WalletDisplay'>\n    <img class='WalletDisplay_icon' src={wallets[props.type] ? wallets[props.type].icon : WalletIcon} />\n    <p class='WalletDisplay_address'>{ props.address && props.address }</p>\n    { props.connected\n      ? <Button small secondary class='WalletDisplay_message' onClick={e => props.onButtonClick(e)}>Change wallet</Button>\n      : <Button small primary class='WalletDisplay_message error' onClick={e => props.onButtonClick(e)}>Connect wallet</Button>\n    }\n    { props.balance &&\n      <div>\n        <p>Spendable</p>\n        <p class='WalletDisplay_balance'>{props.balance} {currencies[props.currency].code}</p>\n      </div>\n    }\n  </div>\n)\n\nWalletBalance.propTypes = PropTypes.shape({\n  balance: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  connected: PropTypes.bool.isRequired,\n  address: PropTypes.string,\n  onButtonClick: PropTypes.func.isRequired\n}).isRequired\n\nexport default WalletBalance\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Button from '../../components/Button/Button'\n\nimport wallets from '../../utils/wallets'\n\nimport './WalletChoose.css'\n\nconst WalletChoose = (props) => (\n  <div className='WalletChoose'>\n    <h1>{props.title}</h1>\n    <p>{props.subTitle}</p>\n    <h2>Pay with {props.currency.toUpperCase()}</h2>\n    {props.wallets.map((wallet) => (\n      <div>\n        <div class='WalletChoose_wallet'>\n          <p><a href='#'>Testnet only</a></p>\n          <img src={wallets[wallet].icon} className='WalletPanel_walletImg' />\n          <h5>{wallets[wallet].name}</h5>\n          <p><a href='#'>Trouble connecting?</a></p>\n        </div>\n        <Button wide primary onClick={() => props.chooseWallet(wallet)}>Connect</Button>\n      </div>\n    ))}\n  </div>\n)\n\nWalletChoose.propTypes = {\n  chooseWallet: PropTypes.func,\n  currency: PropTypes.string,\n  title: PropTypes.string,\n  subTitle: PropTypes.string,\n  wallets: PropTypes.array\n}\n\nexport default WalletChoose\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '../../components/Button/Button'\n\nimport wallets from '../../utils/wallets'\n\nimport './WalletConnecting.css'\n\nconst WalletConnecting = (props) => (\n  <div className='WalletConnecting'>\n    <h2>{props.currency === 'eth' ? 'Login to MetaMask' : 'To confirm'}</h2>\n    {props.currency === 'btc' && <p>Navigate to your Bitcoin account</p>}\n    <div className='WalletConnecting_wallet'>\n      <img src={wallets[props.wallet].icon} className='WalletPanel_walletImg' />\n      <h5>{wallets[props.wallet].name}</h5>\n    </div>\n    {props.wallet === 'ledger' && (\n      <div className='WalletConnecting_ledger'>\n        <img src={wallets[props.wallet + '_purple'].icon} />\n        <div className='WalletConnecting_ledgerPin'>\n          <p>Insert Ledger Pin</p>\n        </div>\n      </div>\n    )}\n    <Button wide primary onClick={props.cancelWallet}>{props.cancelText}</Button>\n  </div>\n)\n\nWalletConnecting.propTypes = {\n  cancelText: PropTypes.string,\n  cancelWallet: PropTypes.func,\n  currency: PropTypes.string,\n  title: PropTypes.string,\n  subTitle: PropTypes.string,\n  wallet: PropTypes.string\n}\n\nexport default WalletConnecting\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '../../components/Button/Button'\nimport { shortenAddress } from '../../utils/address'\nimport wallets from '../../utils/wallets'\n\nimport './WalletConnected.css'\n\nconst WalletConnected = (props) => (\n  <div className='WalletConnected'>\n    <h2>{wallets[props.wallet].name} Connected</h2>\n    <div className='WalletConnected_wallet'>\n      <img src={wallets[props.wallet].icon} className='WalletPanel_walletImg' />\n      <h5>{wallets[props.wallet].name}</h5>\n      <p>{shortenAddress(props.addresses[0])}</p>\n    </div>\n    <Button wide primary onClick={props.disconnectWallet}>{props.disconnectText}</Button>\n  </div>\n)\n\nWalletConnected.propTypes = {\n  addresses: PropTypes.array,\n  currency: PropTypes.string,\n  disconnectText: PropTypes.string,\n  disconnectWallet: PropTypes.func,\n  wallet: PropTypes.string\n}\n\nexport default WalletConnected\n","export function shortenAddress (address) {\n  return `${address.substring(0, 6)}...${address.substring(address.length - 6)}`\n}\n","const wallets = {\n  btc: {\n    ledger: {\n      multiAddress: true,\n      connectTitle: 'Plug in and enter',\n      connectSubtitle: ''\n    }\n  },\n  eth: {\n    metamask: {\n      multiAddress: false,\n      connectTitle: 'Login to MetaMask',\n      connectSubtitle: ''\n    },\n    ledger: {\n      multiAddress: true,\n      connectTitle: 'Plug in and enter',\n      connectSubtitle: 'Choose ethereum application and enable smart contract support'\n    }\n  }\n}\n\nexport default wallets\n","import React, {Component} from 'react'\nimport Modal from '@material-ui/core/Modal'\nimport WalletChoose from '../WalletChoose/WalletChoose'\nimport WalletConnecting from '../WalletConnecting/WalletConnecting'\nimport WalletConnected from '../WalletConnected/WalletConnected'\nimport wallets from './Wallets'\n\nimport './WalletConnectPopup.css'\n\nclass WalletConnectPopup extends Component {\n  constructor (props) {\n    super(props)\n\n    this.chooseWallet = this.chooseWallet.bind(this)\n    this.disconnectWallet = this.disconnectWallet.bind(this)\n  }\n\n  chooseWallet (wallet) {\n    const { id, currency } = this.props\n    this.props.chooseWallet(id, currency, wallet)\n  }\n\n  disconnectWallet () {\n    const { id } = this.props\n    this.props.disconnectWallet(id)\n  }\n\n  render () {\n    const props = this.props\n    let walletConnectBody\n\n    if (props.walletConnected) {\n      walletConnectBody = (\n        <WalletConnected\n          addresses={props.addresses}\n          currency={props.currency}\n          disconnectText='Disconnect'\n          disconnectWallet={this.disconnectWallet}\n          wallet={props.wallet}\n        />\n\n      )\n    } else if (props.walletChosen) {\n      walletConnectBody = (\n        <WalletConnecting\n          title={wallets[props.currency][props.wallet].connectTitle}\n          subtitle={wallets[props.currency][props.wallet].connectSubtitle}\n          cancelText='Cancel'\n          cancelWallet={this.disconnectWallet}\n          currency={props.currency}\n          wallet={props.wallet} />\n      )\n    } else {\n      walletConnectBody = (\n        <WalletChoose\n          title='Liquality'\n          subTitle='By connecting you understand that you are on your own trust a cutting-edge technology without need to trust your trading partner'\n          wallets={props.currency === 'eth' ? ['metamask'] : ['ledger']}\n          chooseWallet={this.chooseWallet}\n          currency={props.currency} />\n      )\n    }\n\n    return (\n      <div>\n        <Modal id={props.id} open={props.open} onClose={props.handleClose}>\n          <div className='WalletConnectModal'>\n            <div className='WalletConnectModal_body'>\n              { walletConnectBody }\n            </div>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default WalletConnectPopup\n","import React, { Component } from 'react'\nimport WalletDisplay from '../../components/WalletDisplay/WalletDisplay'\nimport WalletConnectPopup from '../../components/WalletConnectPopup/WalletConnectPopup'\n\nimport './WalletPanel.css'\n\nclass WalletPanel extends Component {\n  render () {\n    const { a: assetA, b: assetB } = this.props.assets\n    const { a: walletA, b: walletB } = this.props.wallets\n\n    return <div class='WalletPanel'>\n      <div class='row justify-content-between no-gutters'>\n        <div class='col WalletPanel_left'>\n          <WalletDisplay\n            currency={assetA.currency}\n            type={walletA.type}\n            balance={walletA.balance}\n            address={walletA.addresses[0]}\n            connected={walletA.connected}\n            onButtonClick={(e) => this.props.onToggleWalletConnect('a', e.currentTarget)} />\n        </div>\n        <div class='col WalletPanel_right'>\n          <WalletDisplay\n            currency={assetB.currency}\n            type={walletB.type}\n            balance={walletB.balance}\n            address={walletB.addresses[0]}\n            connected={walletB.connected}\n            onButtonClick={(e) => this.props.onToggleWalletConnect('b', e.currentTarget)} />\n        </div>\n      </div>\n      <WalletConnectPopup\n        open={walletA.connectOpen}\n        currency={assetA.currency}\n        id='a'\n        walletChosen={walletA.chosen}\n        wallet={walletA.type}\n        chooseWallet={this.props.waitForWallet}\n        disconnectWallet={this.props.onWalletDisconnected}\n        anchorEl={walletA.anchorEl}\n        addresses={walletA.addresses}\n        walletConnected={walletA.connected}\n        handleClose={(e) => this.props.onToggleWalletConnect('a', e.currentTarget)}\n      />\n\n      <WalletConnectPopup\n        open={walletB.connectOpen}\n        currency={assetB.currency}\n        id='b'\n        walletChosen={walletB.chosen}\n        wallet={walletB.type}\n        chooseWallet={this.props.waitForWallet}\n        disconnectWallet={this.props.onWalletDisconnected}\n        anchorEl={walletB.anchorEl}\n        addresses={walletB.addresses}\n        walletConnected={walletB.connected}\n        handleClose={(e) => this.props.onToggleWalletConnect('b', e.currentTarget)}\n      />\n    </div>\n  }\n}\n\nexport default WalletPanel\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/wallets'\nimport WalletPanel from './WalletPanel'\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.swap.assets,\n    wallets: state.swap.wallets,\n    isPartyB: state.swap.isPartyB\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    onToggleWalletConnect: actions.toggleWalletConnect,\n    waitForWallet: actions.waitForWallet,\n    onWalletConnected: actions.connectWallet,\n    onWalletDisconnected: actions.disconnectWallet\n  }\n)(WalletPanel)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport currencies from '../../utils/currencies'\nimport AssetsBG from './assets-bg.svg'\nimport './SwapPairPanel.css'\n\nclass SwapPairPanel extends Component {\n  render () {\n    return <div className='SwapPairPanel'>\n      <div className='SwapPairPanel_assetContainer'>\n        <img src={currencies[this.props.haveCurrency].icon} className='SwapPairPanel_asset SwapPairPanel_asset_left' />\n        <img src={currencies[this.props.wantCurrency].icon} className='SwapPairPanel_asset SwapPairPanel_asset_right' />\n        <img src={AssetsBG} className='SwapPairPanel_assetsBG' />\n        {this.props.icon && <img src={this.props.icon} className='SwapPairPanel_icon' onClick={(e) => this.props.onIconClick(e)} />}\n      </div>\n      <div className='SwapPairPanel_labels'>\n        <h1 className='SwapPairPanel_labels_have'>{this.props.haveLabel}</h1>\n        <h1 className='SwapPairPanel_labels_want'>{this.props.wantLabel}</h1>\n      </div>\n    </div>\n  }\n}\n\nSwapPairPanel.propTypes = {\n  haveCurrency: PropTypes.string.isRequired,\n  haveLabel: PropTypes.string.isRequired,\n  wantCurrency: PropTypes.string.isRequired,\n  wantLabel: PropTypes.string.isRequired,\n  icon: PropTypes.any,\n  onIconClick: PropTypes.func\n}\n\nSwapPairPanel.defaultProps = {\n  haveLabel: 'Have',\n  wantLabel: 'Want'\n}\n\nexport default SwapPairPanel\n","import _ from 'lodash';\n\nconst types = {\n  CHANGE_AMOUNT: 'CHANGE_AMOUNT'\n}\n\nfunction changeAmount (party, newValue) {\n  return (dispatch, getState) => {\n    dispatch({ type: types.CHANGE_AMOUNT, party, newValue })\n    const assets = getState().swap.assets\n\n    const a = {type: 'a', value: assets.a.value}\n    const b = {type: 'b', value: assets.b.value}\n    const rate = {type: 'rate', value: assets.rate.value}\n\n    var filledInputs = _.filter([a,b,rate], (asset) => {\n      return asset.value !== null && asset.value !== \"0\" && asset.value !== \"\"\n    })\n    var unfilledInputs = _.filter([a,b,rate], (asset) => {\n      return asset.value === null || asset.value === \"0\" || asset.value === \"\"\n    })\n\n    var allFilled = filledInputs.length === 3\n    var twoFilled = filledInputs.length === 2\n\n    var onlyAUnfilled = twoFilled && unfilledInputs[0].type === 'a'\n    var onlyBUnfilled = twoFilled && unfilledInputs[0].type === 'b'\n    var onlyRateUnfilled = twoFilled && unfilledInputs[0].type === 'rate'\n\n    if (filledInputs.length >= 2) {\n      if (((allFilled && party === 'rate') || onlyAUnfilled) && party !== 'a') {\n        var newA = +(parseFloat(b.value) * parseFloat(rate.value)).toFixed(6)\n        dispatch({ type: types.CHANGE_AMOUNT, party: 'a', newValue: newA.toString() })\n      } else if (onlyBUnfilled && party !== 'b') {\n        var newB = +(parseFloat(a.value) / parseFloat(rate.value)).toFixed(6)\n        dispatch({ type: types.CHANGE_AMOUNT, party: 'b', newValue: newB.toString() })\n      } else if ((allFilled || onlyRateUnfilled) && party !== 'rate') {\n        var newRate = +(parseFloat(a.value) / parseFloat(b.value)).toFixed(6)\n        dispatch({ type: types.CHANGE_AMOUNT, party: 'rate', newValue: newRate.toString() })\n      }\n    }\n  }\n}\n\nconst actions = {\n  changeAmount\n}\n\nexport { types, actions }\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport currencies from '../../utils/currencies'\nimport './CurrencyInput.css'\n\nconst CurrencyInput = (props) => (\n  <div className='CurrencyInput'>\n    <h3 className='CurrencyInput_heading'>{currencies[props.currency].code}</h3>\n    <input type='number' readOnly={props.disabled} value={props.value} className='CurrencyInput_input' placeholder='0.00' onChange={e => props.onChange(e.target.value)} />\n  </div>\n)\n\nCurrencyInput.propTypes = {\n  // TODO: probably need some sort of repository for currency codes and icons?\n  currency: PropTypes.oneOf(Object.keys(currencies)).isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func\n}\n\nCurrencyInput.defaultProps = {\n  value: 0\n}\n\nexport default CurrencyInput\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport currencies from '../../utils/currencies'\nimport './Rate.css'\n\nconst Rate = (props) => (\n  <div className='Rate'>\n    <h5 className='Rate_heading'>Rate</h5>\n    <h5 className='Rate_stable'><strong>1 {currencies[props.currencyB].code}</strong></h5>\n    <h4 className='Rate_equal'>=</h4>\n    <h6>\n      <input type='number' readOnly={props.disabled} value={props.value} className='Rate_input' placeholder='0.0000' onChange={e => props.onChange(e.target.value)} />\n      {currencies[props.currencyA].code}\n    </h6>\n  </div>\n)\n\nRate.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func\n}\n\nRate.defaultProps = {\n  value: 0\n}\n\nexport default Rate\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport CurrencyInput from '../../components/CurrencyInput/CurrencyInput'\nimport Rate from '../../components/Rate/Rate'\nimport './CurrencyInputs.css'\n\nclass CurrencyInputs extends Component {\n  render () {\n    const { a: assetA, b: assetB, rate: assetRate } = this.props.assets\n    return <div className='CurrencyInputs'>\n      <div className='row justify-content-between no-gutters'>\n        <div className='col CurrencyInputs_left'>\n          <CurrencyInput\n            currency={assetA.currency}\n            value={assetA.value}\n            disabled={this.props.disabled}\n            onChange={newValue => this.props.onAmountChange('a', newValue)} />\n        </div>\n        <div class='col CurrencyInputs_right'>\n          <CurrencyInput\n            currency={assetB.currency}\n            value={assetB.value}\n            disabled={this.props.disabled}\n            onChange={newValue => this.props.onAmountChange('b', newValue)} />\n        </div>\n        {!this.props.disabled && \n          <div className='CurrencyInputs_centre'>\n            <Rate\n              currencyA={assetA.currency}\n              currencyB={assetB.currency}\n              value={assetRate.value}\n              disabled={this.props.disabled}\n              onChange={newValueA => this.props.onAmountChange('rate', newValueA)}\n            />\n          </div>\n        }\n      </div>\n    </div>\n  }\n}\n\nCurrencyInputs.propTypes = {\n  disabled: PropTypes.bool\n}\n\nexport default CurrencyInputs\n","import { connect } from 'react-redux'\nimport { actions as swapActions } from '../../actions/swap'\nimport { actions as assetActions } from '../../actions/assets'\nimport CurrencyInputs from './CurrencyInputs'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    assets: state.swap.assets,\n    disabled: ownProps.disabled\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    onSwitchSides: swapActions.switchSides,\n    onAmountChange: assetActions.changeAmount\n  }\n)(CurrencyInputs)\n","const types = {\n  CHANGE_COUNTER_PARTY_ADDRESS: 'CHANGE_COUNTER_PARTY_ADDRESS'\n}\n\nfunction changeCounterPartyAddress (currency, newValue, valid) {\n  return { type: types.CHANGE_COUNTER_PARTY_ADDRESS, currency, newValue, valid }\n}\n\nconst actions = {\n  changeCounterPartyAddress\n}\n\nexport { types, actions }\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport currencies from '../../utils/currencies'\nimport './AddressInput.css'\nimport TickIcon from './tick.svg'\nimport ErrorIcon from './error.svg'\n\nconst AddressInput = (props) => {\n  const valid = currencies[props.currency].isValidAddress(props.value)\n  let helperMessage\n  if (!valid) {\n    helperMessage = 'Invalid Address'\n  }\n\n  return <div class='AddressInput'>\n    <div class='AddressInput_wrapper'>\n      <div className={'AddressInput_box ' + (valid ? 'AddressInput_box_valid' : 'AddressInput_box_invalid')}>\n        <img class='AddressInput_icon' src={currencies[props.currency].icon} />\n        <input class='AddressInput_input'\n          value={props.value}\n          onChange={e => props.onChange(e.target.value, currencies[props.currency].isValidAddress(e.target.value))}\n        />\n      </div>\n      <img class='AddressInput_status' src={valid ? TickIcon : ErrorIcon} />\n    </div>\n    <div class='AddressInput_message'>{helperMessage}</div>\n  </div>\n}\n\nAddressInput.propTypes = {\n  // TODO: probably need some sort of repository for currency codes and icons?\n  currency: PropTypes.oneOf(Object.keys(currencies)).isRequired,\n  value: PropTypes.string,\n  onChange: PropTypes.func\n}\n\nexport default AddressInput\n","import React, { Component } from 'react'\nimport AddressInput from '../../components/AddressInput/AddressInput'\n\nimport './CounterPartyWallets.css'\n\nclass CounterPartyWallets extends Component {\n  render () {\n    const { a: assetA, b: assetB } = this.props.assets\n    const counterParty = this.props.counterParty\n\n    return <div class='CounterPartyWallets'>\n      <div class='row'>\n        <div class='col'>\n          <h5 class='CounterPartyWallets_heading'>Receive From</h5>\n          <AddressInput currency={assetB.currency}\n            value={counterParty[assetB.currency].address}\n            onChange={(newValue, valid) => this.props.onCounterPartyAddressChange(assetB.currency, newValue, valid)}\n          />\n        </div>\n        <div class='col'>\n          <h5 class='CounterPartyWallets_heading'>Send To</h5>\n          <AddressInput currency={assetA.currency}\n            value={counterParty[assetA.currency].address}\n            onChange={(newValue, valid) => this.props.onCounterPartyAddressChange(assetA.currency, newValue, valid)}\n          />\n        </div>\n      </div>\n    </div>\n  }\n}\n\nexport default CounterPartyWallets\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/counterparty'\nimport CounterPartyWallets from './CounterPartyWallets'\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.swap.assets,\n    counterParty: state.swap.counterParty\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    onCounterPartyAddressChange: actions.changeCounterPartyAddress\n  }\n)(CounterPartyWallets)\n","import React, { Component } from 'react'\nimport { generateExpiration, expirationDurations } from '../../utils/expiration'\n\nimport LockIcon from '../../icons/lock.svg'\nimport ClockIcon from '../../icons/clock.svg'\nimport './InitiatorExpirationInfo.css'\n\nclass InitiatorExpirationInfo extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      expiration: generateExpiration()\n    }\n  }\n\n  componentDidMount () {\n    this.interval = setInterval(() => {\n      this.setState({\n        expiration: generateExpiration()\n      })\n    }, 5000)\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.interval)\n  }\n\n  render () {\n    return <div class='InitiatorExpirationInfo'>\n      <div class='row justify-content-center'>\n        <div><img src={LockIcon} class='InitiatorExpirationInfo_icon' />Funds Locked {expirationDurations.a.asHours().toFixed(2)} HRS</div>\n        <div><img src={ClockIcon} class='InitiatorExpirationInfo_icon' />Offer Active {expirationDurations.b.asHours().toFixed(2)} HRS</div>\n        <div><strong>~ {this.state.expiration.format('D/M/YY HH:mm')}</strong></div>\n      </div>\n    </div>\n  }\n}\n\nexport default InitiatorExpirationInfo\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/swap'\nimport InitiatorExpirationInfo from './InitiatorExpirationInfo'\n\nconst mapStateToProps = state => {\n  return {\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    refundSwap: actions.refundSwap\n  }\n)(InitiatorExpirationInfo)\n","import React from 'react'\n\nfunction withCopyButton (WrappedComponent) {\n  return class extends React.Component {\n    handleCopyClick () {\n      const tempInput = document.createElement('input')\n      tempInput.value = this.props.link\n      tempInput.style = 'position: absolute; top: -2000px;'\n      document.body.appendChild(tempInput)\n      tempInput.select()\n      document.execCommand('copy')\n      document.body.removeChild(tempInput)\n    }\n\n    render () {\n      return <WrappedComponent onCopyClick={() => this.handleCopyClick()} {...this.props} />\n    }\n  }\n}\n\nexport default withCopyButton\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport currencies from '../../utils/currencies'\nimport { getClaimExpiration } from '../../utils/expiration'\nimport withCopyButton from '../withCopyButton'\nimport ClockIcon from '../../icons/clock.svg'\nimport CopyIcon from '../../icons/copy.svg'\nimport { steps } from '../SwapProgressStepper/steps'\nimport './ExpirationDetails.css'\n\nclass ExpirationDetails extends Component {\n  constructor (props) {\n    super(props)\n    this.state = this.getExpirationState()\n  }\n\n  getTransaction () {\n    const transactions = this.props.transactions\n    let displayOrder = [\n      transactions.b.claim,\n      transactions.a.claim,\n      transactions.b.fund,\n      transactions.a.fund\n    ]\n\n    if (this.props.step === steps.INITIATION || this.props.step === steps.AGREEMENT) {\n      displayOrder = [\n        transactions.a.fund,\n        transactions.b.fund\n      ]\n    }\n\n    return displayOrder.find(tx => tx.hash) || {}\n  }\n\n  getExpirationState () {\n    const party = this.props.isPartyB ? 'b' : 'a'\n    const expiration = getClaimExpiration(this.props.expiration, party)\n    return {\n      start: expiration.start,\n      duration: expiration.duration,\n      expiration: expiration.time,\n      now: moment(),\n      transaction: this.getTransaction()\n    }\n  }\n\n  componentDidMount () {\n    this.interval = setInterval(this.tick.bind(this), 1000)\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.interval)\n  }\n\n  tick () {\n    this.setState(this.getExpirationState())\n  }\n\n  render () {\n    const maxNow = this.state.now.isAfter(this.state.expiration) ? this.state.expiration : this.state.now\n    const left = moment.duration(this.state.expiration.diff(maxNow))\n    const passed = moment.duration(maxNow.diff(this.state.start))\n    const total = this.state.duration\n\n    const filled = (((total.asSeconds() - left.asSeconds()) / total.asSeconds()) * 100).toFixed(2)\n\n    return <div class='ExpirationDetails'>\n      <img src={ClockIcon} class='ExpirationDetails_clock' />\n      <div class='ExpirationDetails_passed'>{moment.utc(passed.asMilliseconds()).format('HH:mm')}hr</div>\n      <div class='ExpirationDetails_center'>\n        <div class='ExpirationDetails_top'>\n          <div class='ExpirationDetails_terms'>\n            <em>Get {this.props.assets.b.value} {currencies[this.props.assets.b.currency].code}\n            &nbsp;for {this.props.assets.a.value} {currencies[this.props.assets.a.currency].code}</em>\n            &nbsp;Active for {moment.utc(left.asMilliseconds()).format('HH:mm')}hr {this.state.expiration.format('D/M/Y HH:mm')}\n          </div>\n          <div class='ExpirationDetails_link'>\n            <a onClick={() => this.props.onCopyClick()}>Swap link<img src={CopyIcon} /></a>\n          </div>\n        </div>\n        <div class='ExpirationDetails_progress'>\n          <div class='ExpirationDetails_progress_fill' style={{width: `${filled}%`}} />\n        </div>\n        <div class='ExpirationDetails_bottom'>\n          <div class='ExpirationDetails_transaction'>\n            <strong>Transaction ID: </strong> {this.state.transaction.hash}\n          </div>\n          <div class='ExpirationDetails_confirmations'>\n            Confirmations: {this.state.transaction.confirmations}\n          </div>\n        </div>\n      </div>\n      <div class='ExpirationDetails_left'>{moment.utc(left.asMilliseconds()).format('HH:mm')}hr</div>\n    </div>\n  }\n}\n\nExpirationDetails.propTypes = {\n  isClaim: PropTypes.bool\n}\n\nexport default withCopyButton(ExpirationDetails)\n","import { connect } from 'react-redux'\nimport ExpirationDetails from './ExpirationDetails'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    expiration: state.swap.expiration,\n    isPartyB: state.swap.isPartyB,\n    assets: state.swap.assets,\n    transactions: state.swap.transactions,\n    link: state.swap.link,\n    step: state.swap.step,\n    ...ownProps\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n  }\n)(ExpirationDetails)\n","import React, { Component } from 'react'\n\nimport WalletPanel from '../WalletPanel'\nimport SwapPairPanel from '../../components/SwapPairPanel/SwapPairPanel'\nimport CurrencyInputs from '../CurrencyInputs'\nimport CounterPartyWallets from '../CounterPartyWallets'\nimport InitiatorExpirationInfo from '../InitiatorExpirationInfo'\nimport Button from '../../components/Button/Button'\nimport ExpirationDetails from '../../components/ExpirationDetails'\nimport { generateSwapState } from '../../utils/app-links'\n\nimport HandshakeIcon from '../../icons/handshake.png'\nimport SwapIcon from '../../icons/switch.svg'\nimport './SwapInitiation.css'\n\nclass SwapInitiation extends Component {\n  walletsValid () {\n    const initialSwapState = generateSwapState(window.location)\n    return this.props.wallets.a.addresses.includes(initialSwapState.wallets.a.addresses[0]) &&\n    this.props.wallets.b.addresses.includes(initialSwapState.wallets.b.addresses[0])\n  }\n\n  walletsConnected () {\n    return this.props.wallets.a.connected && this.props.wallets.b.connected\n  }\n\n  counterPartyAddressesValid () {\n    return this.props.counterParty[this.props.assets.a.currency].valid &&\n      this.props.counterParty[this.props.assets.b.currency].valid\n  }\n\n  initiationConfirmed () {\n    return this.props.isVerified && this.props.transactions.b.fund.confirmations > 0\n  }\n\n  nextEnabled () {\n    return this.getErrors().length === 0\n  }\n\n  getErrors () {\n    const errors = []\n    if (!this.walletsConnected()) {\n      errors.push('Wallets are not connected')\n    }\n    if (this.props.isPartyB && !this.walletsValid()) {\n      errors.push('The connected wallets must match the wallets supplied for the swap')\n    }\n    if (!this.props.isPartyB && !this.counterPartyAddressesValid()) {\n      errors.push('Invalid counter party addresses')\n    }\n    if (this.props.isPartyB && !this.initiationConfirmed()) {\n      errors.push('Counter party yet to lock funds')\n    }\n    return errors\n  }\n\n  render () {\n    return <div className='SwapInitiation'>\n      <SwapPairPanel\n        haveCurrency={this.props.assets.a.currency}\n        wantCurrency={this.props.assets.b.currency}\n        icon={SwapIcon}\n        onIconClick={() => this.props.switchSides()} />\n      <div class='SwapInitiation_top'>\n        <CurrencyInputs />\n      </div>\n      <WalletPanel />\n      <div class='SwapInitiation_bottom'>\n        { this.props.isPartyB\n          ? <span class='SwapInitiation_handshake'><img src={HandshakeIcon} /></span>\n          : <h5 class='SwapInitiation_counterPartyLabel'>Counter party wallets</h5> }\n        { this.props.isPartyB || <CounterPartyWallets /> }\n        { this.props.isPartyB\n          ? <ExpirationDetails />\n          : <InitiatorExpirationInfo /> }\n        {!this.props.isPartyB && <Button wide primary disabled={!this.nextEnabled()} onClick={this.props.initiateSwap}>Next</Button>}\n        {this.props.isPartyB && <Button wide primary disabled={!this.nextEnabled()} onClick={this.props.confirmSwap}>Confirm Terms</Button>}\n        <div class='SwapInitiation_errors'>\n          {this.getErrors().map(error => <p>{error}</p>)}\n        </div>\n      </div>\n    </div>\n  }\n}\n\nexport default SwapInitiation\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/swap'\nimport SwapInitiation from './SwapInitiation'\n\nconst mapStateToProps = state => {\n  return {\n    expiration: state.swap.expiration,\n    isPartyB: state.swap.isPartyB,\n    wallets: state.swap.wallets,\n    assets: state.swap.assets,\n    counterParty: state.swap.counterParty,\n    transactions: state.swap.transactions,\n    isVerified: state.swap.isVerified\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    initiateSwap: actions.initiateSwap,\n    confirmSwap: actions.confirmSwap,\n    switchSides: actions.switchSides\n  }\n)(SwapInitiation)\n","import React, { Component } from 'react'\nimport './BrandCard.css'\n\nclass BrandCard extends Component {\n  render () {\n    return <div className={'BrandCard ' + this.props.className}>\n      <h1 class='BrandCard_title'>{this.props.title}</h1>\n      {this.props.children}\n    </div>\n  }\n}\n\nexport default BrandCard\n","import React, { Component } from 'react'\nimport BrandCard from '../BrandCard/BrandCard'\nimport Button from '../Button/Button'\nimport withCopyButton from '../withCopyButton'\nimport CompletedIcon from '../../icons/completed.svg'\nimport CopyIcon from '../../icons/copy.svg'\nimport './CounterPartyLinkCard.css'\n\nclass CounterPartyLinkCard extends Component {\n  render () {\n    return <BrandCard className='CounterPartyLinkCard' title='Swap Initiated'>\n      <img class='CounterPartyLinkCard_icon' src={CompletedIcon} />\n      <p class='CounterPartyLinkCard_description'>To continue, share this link with your counterparty</p>\n      <p><Button wide secondary onClick={this.props.onCopyClick} icon={CopyIcon}>Counterparty Link</Button></p>\n      <p><Button wide primary onClick={this.props.onNextClick}>Link Sent</Button></p>\n    </BrandCard>\n  }\n}\n\nexport default withCopyButton(CounterPartyLinkCard)\n","import React, { Component } from 'react'\nimport BrandCard from '../BrandCard/BrandCard'\nimport Button from '../Button/Button'\nimport withCopyButton from '../withCopyButton'\nimport CompletedIcon from '../../icons/completed.svg'\nimport CopyIcon from '../../icons/copy.svg'\nimport './BackupLinkCard.css'\n\nclass BackupLinkCard extends Component {\n  render () {\n    return <BrandCard className='BackupLinkCard' title='Backup'>\n      <img class='BackupLinkCard_icon' src={CompletedIcon} />\n      <p class='BackupLinkCard_description'>You need this link to claim your funds if your browser closes.</p>\n      <p><Button wide secondary onClick={() => this.props.onCopyClick()} icon={CopyIcon}>Backup Link</Button></p>\n      <p><Button wide primary onClick={this.props.onNextClick}>Next</Button></p>\n    </BrandCard>\n  }\n}\n\nexport default withCopyButton(BackupLinkCard)\n","import React, { Component } from 'react'\nimport BrandCard from '../../components/BrandCard/BrandCard'\nimport ExpirationDetails from '../../components/ExpirationDetails'\nimport LiqualityLogo from '../../logo.png'\nimport './Waiting.css'\n\nclass Waiting extends Component {\n  render () {\n    return <BrandCard className='Waiting' title='Awaiting Counterparty'>\n      <p>Thanks to the Atomic Swap you don't need to trust the counterparty and avoid the middlemen.</p>\n      <p><img className='LiqualitySwap_logo' src={LiqualityLogo} /></p>\n      <ExpirationDetails isClaim />\n    </BrandCard>\n  }\n}\n\nexport default Waiting\n","import { connect } from 'react-redux'\nimport Waiting from './Waiting'\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.swap.assets,\n    expiration: state.swap.expiration,\n    isPartyB: state.swap.isPartyB\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Waiting)\n","import React, { Component } from 'react'\nimport BrandCard from '../../components/BrandCard/BrandCard'\nimport Button from '../../components/Button/Button'\nimport currencies from '../../utils/currencies'\nimport './SwapRedemption.css'\nimport ExpirationDetails from '../../components/ExpirationDetails'\n\nclass SwapRedemption extends Component {\n  render () {\n    return <BrandCard className='SwapRedemption' title='Claim Funds'>\n      <div class='SwapRedemption_confirmation'>\n        <p class='SwapRedemption_terms'>\n          Get <strong>{this.props.assets.b.value} {currencies[this.props.assets.b.currency].code}</strong>\n          &nbsp;for <strong>{this.props.assets.a.value} {currencies[this.props.assets.a.currency].code}</strong>\n        </p>\n        <p>Thanks to the <strong>Atomic Swap</strong> you don't need to trust the counterparty and avoid the middleman.</p>\n      </div>\n      <ExpirationDetails isClaim />\n      <p><Button wide primary onClick={this.props.redeemSwap}>Claim your funds</Button></p>\n    </BrandCard>\n  }\n}\n\nexport default SwapRedemption\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/swap'\nimport SwapRedemption from './SwapRedemption'\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.swap.assets,\n    expiration: state.swap.expiration,\n    isPartyB: state.swap.isPartyB\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    redeemSwap: actions.redeemSwap\n  }\n)(SwapRedemption)\n","import React, { Component } from 'react'\nimport CurrencyInputs from '../CurrencyInputs'\nimport SwapPairPanel from '../../components/SwapPairPanel/SwapPairPanel'\nimport Button from '../../components/Button/Button'\n\nimport CompletedIcon from '../../icons/completed.svg'\nimport HandshakeIcon from '../../icons/handshake.png'\nimport './SwapCompleted.css'\n\nclass SwapCompleted extends Component {\n  render () {\n    return <div className='SwapCompleted'>\n      <SwapPairPanel\n        haveCurrency={this.props.assets.a.currency}\n        wantCurrency={this.props.assets.b.currency}\n        haveLabel='Sent'\n        wantLabel='Received'\n        icon={CompletedIcon}\n        onIconClick={() => this.props.switchSides()} />\n      <div class='SwapCompleted_top'>\n        <CurrencyInputs disabled />\n        <h2 class='SwapCompleted_label'>Swap Completed</h2>\n        <span class='SwapCompleted_handshake'><img src={HandshakeIcon} /></span>\n      </div>\n      <div class='SwapCompleted_bottom'>\n        <Button wide primary onClick={() => window.location.replace('/')}>Start another Swap</Button>\n      </div>\n    </div>\n  }\n}\n\nexport default SwapCompleted\n","import { connect } from 'react-redux'\nimport SwapCompleted from './SwapCompleted'\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.swap.assets\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(SwapCompleted)\n","import React, { Component } from 'react'\nimport BrandCard from '../../components/BrandCard/BrandCard'\nimport Button from '../../components/Button/Button'\nimport currencies from '../../utils/currencies'\nimport './SwapRefund.css'\n\nclass SwapRedemption extends Component {\n  render () {\n    return <BrandCard className='SwapRefund' title='Refund'>\n      <div class='SwapRefund_confirmation'>\n        <p class='SwapRefund_terms'>\n          {this.props.assets.a.value} {currencies[this.props.assets.a.currency].code}\n        </p>\n        <p>Your funds are ready for a refund.</p>\n      </div>\n      <p><Button wide primary onClick={this.props.refundSwap}>Get Refund</Button></p>\n    </BrandCard>\n  }\n}\n\nexport default SwapRedemption\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/swap'\nimport SwapRefund from './SwapRefund'\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.swap.assets,\n    expiration: state.swap.expiration,\n    isPartyB: state.swap.isPartyB\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    refundSwap: actions.refundSwap\n  }\n)(SwapRefund)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Stepper, Step, StepLabel, StepConnector } from '@material-ui/core'\nimport { steps, stepData } from './steps'\n\nimport CompletedIcon from '../../icons/completed.svg'\nimport './SwapProgressStepper.css'\n\nclass SwapProgressStepper extends Component {\n  render () {\n    const activeStep = stepData.findIndex(step => step.id === this.props.state)\n    const connector = (\n      <StepConnector\n        classes={{\n          active: 'SwapProgressStepper_connector_active',\n          completed: 'SwapProgressStepper_connector_completed',\n          line: 'SwapProgressStepper_connector_line',\n          root: 'SwapProgressStepper_connector'\n        }}\n      />)\n    return <Stepper connector={connector} activeStep={activeStep} alternativeLabel className='SwapProgressStepper'>\n      {stepData.map((step, index) => {\n        const stepIconProps = {\n          classes: {\n            root: 'SwapProgressStepper_icon',\n            text: 'SwapProgressStepper_icon_text',\n            active: 'SwapProgressStepper_icon_active',\n            completed: 'SwapProgressStepper_icon_completed'\n          }\n        }\n        if (index < activeStep) {\n          stepIconProps.icon = <img src={CompletedIcon} />\n        }\n        return <Step key={step.id}>\n          <StepLabel classes={{\n            label: 'SwapProgressStepper_label',\n            alternativeLabel: 'SwapProgressStepper_alternativeLabel',\n            active: 'SwapProgressStepper_label_active',\n            completed: 'SwapProgressStepper_label_completed'\n          }} StepIconProps={stepIconProps}>{step.label}</StepLabel>\n        </Step>\n      })}\n    </Stepper>\n  }\n}\n\nSwapProgressStepper.propTypes = {\n  state: PropTypes.oneOf(Object.values(steps))\n}\n\nexport default SwapProgressStepper\n","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\n\nimport SwapInitiation from '../SwapInitiation'\nimport CounterPartyLinkCard from '../../components/CounterPartyLinkCard/CounterPartyLinkCard'\nimport BackupLinkCard from '../../components/BackupLinkCard/BackupLinkCard'\nimport Waiting from '../Waiting'\nimport SwapRedemption from '../SwapRedemption'\nimport SwapCompleted from '../SwapCompleted'\nimport SwapRefund from '../SwapRefund'\nimport SwapProgressStepper from '../../components/SwapProgressStepper/SwapProgressStepper'\nimport { generateLink } from '../../utils/app-links'\nimport { transactionPaths as blockExplorerTxUrl } from '../../utils/block-explorers'\n\nimport LiqualityLogo from '../../logo-text.png'\nimport './LiqualitySwap.css'\n\nclass LiqualitySwap extends Component {\n  constructor (props) {\n    super(props)\n    this.getCounterPartyLinkCard = this.getCounterPartyLinkCard.bind(this)\n    this.getBackupLinkCard = this.getBackupLinkCard.bind(this)\n  }\n\n  getBackupLinkCard () {\n    const link = this.props.swap.link\n    return <BackupLinkCard link={link} onNextClick={() => this.props.history.push(this.props.swap.isPartyB ? '/waiting' : '/counterPartyLink')} />\n  }\n\n  getCounterPartyLinkCard () {\n    const link = generateLink(this.props.swap, true)\n    return <CounterPartyLinkCard link={link} onNextClick={() => { this.props.waitForSwapConfirmation() }} />\n  }\n\n  render () {\n    return <div className='LiqualitySwap'>\n      <div className='LiqualitySwap_bar' />\n      <div className='LiqualitySwap_header'>\n        <img className='LiqualitySwap_logo' src={LiqualityLogo} />\n        <SwapProgressStepper state={this.props.swap.step} />\n      </div>\n      <div className='LiqualitySwap_main'>\n        <div className='LiqualitySwap_wave' />\n        <div className='LiqualitySwap_wrapper'>\n          <Route exact path='/' component={SwapInitiation} />\n          <Route path='/backupLink' render={this.getBackupLinkCard} />\n          <Route path='/counterPartyLink' render={this.getCounterPartyLinkCard} />\n          <Route path='/waiting' component={Waiting} />\n          <Route path='/redeem' component={SwapRedemption} />\n          <Route path='/completed' component={SwapCompleted} />\n          <Route path='/refund' component={SwapRefund} />\n        </div>\n      </div>\n    </div>\n  }\n}\n\nexport default LiqualitySwap\n","import { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { actions } from '../../actions/swap'\nimport LiqualitySwap from './LiqualitySwap'\n\nconst mapStateToProps = state => ({\n  swap: state.swap\n})\n\nexport default withRouter(connect(\n  mapStateToProps,\n  {\n    waitForSwapConfirmation: actions.waitForSwapConfirmation,\n    waitForSwapClaim: actions.waitForSwapClaim\n  }\n)(LiqualitySwap))\n","/**\n * Generate a reducer function\n * @param {object} reducerMap Map of actionType -> actionHandler function\n * @param {object} initialState The initial state of the reducer\n * @param {Function} [fallbackFunction] An optional callback function to be called\n * when an actionHandler does not exist for this reducer\n */\nfunction getReducerFunction (reducerMap, initialState, fallbackFunction) {\n  return (state = initialState, action) => {\n    const reducer = reducerMap[action.type]\n    if (reducer) {\n      return reducer(state, action)\n    } else {\n      return fallbackFunction ? fallbackFunction(state, action) : state\n    }\n  }\n}\n\nexport { getReducerFunction }\n","import update from 'immutability-helper'\nimport { types as assetTypes } from '../actions/assets'\nimport { types as swapTypes } from '../actions/swap'\nimport { getReducerFunction } from './helpers'\n\nconst initialState = {\n  a: {\n    currency: 'eth',\n    value: null\n  },\n  b: {\n    currency: 'btc',\n    value: null\n  },\n  rate: {\n    value: null\n  }\n}\n\nfunction switchSides (state, action) {\n  const newRate = +(parseFloat(state.b.value) / parseFloat(state.a.value)).toFixed(6)\n  return update(state, {\n    a: { $set: state.b },\n    b: { $set: state.a },\n    rate: { $set: { value: newRate.toString() } }\n  })\n}\n\nfunction changeAmount (state, action) {\n  return update(state, {\n    [action.party]: { value: { $set: action.newValue } }\n  })\n}\n\nconst reducers = {\n  [swapTypes.SWITCH_SIDES]: switchSides,\n  [assetTypes.CHANGE_AMOUNT]: changeAmount\n}\n\nconst assets = getReducerFunction(reducers, initialState)\n\nexport default assets\n","import update from 'immutability-helper'\nimport { types as walletTypes } from '../actions/wallets'\nimport { types as swapTypes } from '../actions/swap'\nimport { getReducerFunction } from './helpers'\n\nconst initialState = {\n  a: {\n    addresses: [], // TODO: why multiple addresses?\n    balance: null,\n    connectOpen: false,\n    connected: false,\n    chosen: false,\n    type: ''\n  },\n  b: {\n    addresses: [],\n    balance: null,\n    connectOpen: false,\n    connected: false,\n    chosen: false,\n    type: ''\n  }\n}\n\nfunction switchSides (state, action) {\n  return update(state, {\n    a: { $set: state.b },\n    b: { $set: state.a }\n  })\n}\n\nfunction toggleWalletConnect (state, action) {\n  return update(state, {\n    [action.party]: {\n      connectOpen: { $set: !state[action.party].connectOpen },\n      anchorEl: { $set: action.target }\n    }\n  })\n}\n\nfunction chooseWallet (state, action) {\n  return update(state, {\n    [action.party]: {\n      chosen: { $set: true },\n      type: { $set: action.wallet }\n    }\n  })\n}\n\nfunction connectWallet (state, action) {\n  return update(state, {\n    [action.party]: {\n      addresses: { $set: action.addresses },\n      connected: { $set: true },\n      balance: { $set: action.balance }\n    }\n  })\n}\n\nfunction disconnectWallet (state, action) {\n  return update(state, {\n    [action.party]: {\n      addresses: { $set: [] },\n      connected: { $set: false },\n      chosen: { $set: false },\n      type: { $set: '' }\n    }\n  })\n}\n\nconst reducers = {\n  [swapTypes.SWITCH_SIDES]: switchSides,\n  [walletTypes.TOGGLE_WALLET_CONNECT]: toggleWalletConnect,\n  [walletTypes.CHOOSE_WALLET]: chooseWallet,\n  [walletTypes.CONNECT_WALLET]: connectWallet,\n  [walletTypes.DISCONNECT_WALLET]: disconnectWallet\n}\n\nconst wallets = getReducerFunction(reducers, initialState)\n\nexport default wallets\n","import update from 'immutability-helper'\nimport { types } from '../actions/counterparty'\nimport { getReducerFunction } from './helpers'\n\nconst initialState = {\n  eth: {address: '', valid: false},\n  btc: {address: '', valid: false}\n}\n\nfunction changeCounterPartyAddress (state, action) {\n  return update(state, {\n    [action.currency]: { address: { $set: action.newValue }, valid: { $set: action.valid } }\n  })\n}\n\nconst reducers = {\n  [types.CHANGE_COUNTER_PARTY_ADDRESS]: changeCounterPartyAddress\n}\n\nconst counterParty = getReducerFunction(reducers, initialState)\n\nexport default counterParty\n","import update from 'immutability-helper'\nimport { types } from '../actions/transactions'\nimport { getReducerFunction } from './helpers'\n\nconst initialState = {\n  a: {\n    fund: {},\n    claim: {}\n  },\n  b: {\n    fund: {},\n    claim: {}\n  }\n}\n\nfunction setTransaction (state, action) {\n  return update(state, {\n    [action.party]: { [action.kind]: { $set: {confirmations: 0, ...action.tx} } }\n  })\n}\n\nconst reducers = {\n  [types.SET_TRANSACTION]: setTransaction\n}\n\nconst counterParty = getReducerFunction(reducers, initialState)\n\nexport default counterParty\n","import update from 'immutability-helper'\nimport { crypto } from '@liquality/chainabstractionlayer/dist/index.umd.js'\nimport { types } from '../actions/secretparams'\nimport { getReducerFunction } from './helpers'\n\nconst initialState = {}\n\nfunction setSecret (state, action) {\n  return update(state, {\n    secret: { $set: action.secret },\n    secretHash: { $set: crypto.sha256(action.secret) }\n  })\n}\n\nfunction setSecretHash (state, action) {\n  return update(state, {\n    secretHash: { $set: action.secretHash }\n  })\n}\n\nconst reducers = {\n  [types.SET_SECRET]: setSecret,\n  [types.SET_SECRET_HASH]: setSecretHash\n}\n\nconst secretParams = getReducerFunction(reducers, initialState)\n\nexport default secretParams\n","import { combineReducers } from 'redux'\n\nimport { types } from '../actions/swap'\nimport { steps } from '../components/SwapProgressStepper/steps'\n\nimport assets from './assets'\nimport wallets from './wallets'\nimport counterParty from './counterparty'\nimport transactions from './transactions'\nimport secretParams from './secretparams'\n\nexport default combineReducers({\n  assets,\n  wallets,\n  counterParty,\n  transactions,\n  secretParams,\n  step: (state = steps.INITIATION, action) => {\n    return action.type === types.SET_STEP ? action.step : state\n  },\n  expiration: (state = null, action) => {\n    return action.type === types.SET_EXPIRATION ? action.expiration : state\n  },\n  link: (state = null, action) => {\n    return action.type === types.SET_LINK ? action.link : state\n  },\n  isVerified: (state = false, action) => {\n    return action.type === types.SET_IS_VERIFIED ? action.isVerified : state\n  },\n  isPartyB: (state = false) => state\n})\n","import { combineReducers } from 'redux'\nimport swap from './swap'\n\nexport default combineReducers({\n  swap\n})\n","import React, { Component } from 'react'\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { createBrowserHistory } from 'history'\nimport { ConnectedRouter, connectRouter, routerMiddleware } from 'connected-react-router'\nimport { hotjar } from 'react-hotjar'\n\nimport { actions as swapActions } from './actions/swap'\nimport { actions as transactionActions } from './actions/transactions'\nimport LiqualitySwap from './containers/LiqualitySwap'\nimport reducers from './reducers'\nimport { generateSwapState } from './utils/app-links'\nimport './App.css'\n\nconst history = createBrowserHistory({basename: window.location.pathname})\n\nhotjar.initialize(1102216, 6)\n\nconst initialAppState = {\n  swap: generateSwapState(window.location)\n}\n\nconst store = createStore(\n  connectRouter(history)(reducers),\n  initialAppState,\n  applyMiddleware(thunk, routerMiddleware(history))\n)\n\nif (initialAppState.swap) {\n  if (initialAppState.swap.transactions.a.fund.hash) {\n    store.dispatch(swapActions.waitForExpiration)\n  }\n\n  if (initialAppState.swap.isPartyB) {\n    // Need to use action to kick off tx monitoring\n    store.dispatch(transactionActions.setTransaction(\n      'b', 'fund', initialAppState.swap.transactions.b.fund\n    ))\n    store.dispatch(swapActions.verifyInitiateSwapTransaction)\n  }\n}\n\nclass App extends Component {\n  render () {\n    return (\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <LiqualitySwap />\n        </ConnectedRouter>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport MetaMask from './MetaMask'\nimport registerServiceWorker from './registerServiceWorker'\nimport config from './config'\n\nfunction addScript (code) {\n  var s = document.createElement('script')\n  s.type = 'text/javascript'\n  s.innerHTML = code\n  document.getElementsByTagName('head')[0].appendChild(s)\n}\n\naddScript(config.injectScript)\n\nif (typeof web3 === 'undefined') {\n  ReactDOM.render(<MetaMask />, document.getElementById('root'))\n} else {\n  ReactDOM.render(<App />, document.getElementById('root'))\n}\n\nregisterServiceWorker()\n","import React, { Component } from 'react'\n\nclass App extends Component {\n  render () {\n    return (\n      <h2 style={{marginTop: '60px', textAlign: 'center'}}>\n        MetaMask is needed to run Liquality Atomic Swap. You can download it from here: <a href='https://metamask.io/'>metamask.io</a>\n      </h2>\n    )\n  }\n}\n\nexport default App\n","/* global fetch */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/copy.26f38b83.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock.baea04ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/handshake.35e4ba88.png\";"],"sourceRoot":""}